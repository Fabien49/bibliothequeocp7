2022-03-11 10:39:57,979 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 5348 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 10:39:57,993 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 10:39:57,994 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 10:40:02,361 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: insert into registered_user (email, first_name, last_name, password,roles) VALUES ( 'fabien@gmail.com', 'Fabien', 'Chapeau', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test1@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test2@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test3@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ); nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "REGISTERED_USER" non trouvée
Table "REGISTERED_USER" not found; SQL statement:
insert into registered_user (email, first_name, last_name, password,roles) VALUES ( 'fabien@gmail.com', 'Fabien', 'Chapeau', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test1@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test2@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test3@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ) [42102-200]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.fabienit.biblioapi.BiblioApiApplication.main(BiblioApiApplication.java:10)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: insert into registered_user (email, first_name, last_name, password,roles) VALUES ( 'fabien@gmail.com', 'Fabien', 'Chapeau', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test1@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test2@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test3@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ); nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "REGISTERED_USER" non trouvée
Table "REGISTERED_USER" not found; SQL statement:
insert into registered_user (email, first_name, last_name, password,roles) VALUES ( 'fabien@gmail.com', 'Fabien', 'Chapeau', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test1@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test2@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test3@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ) [42102-200]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:626)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1807)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 15 common frames omitted
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "REGISTERED_USER" non trouvée
Table "REGISTERED_USER" not found; SQL statement:
insert into registered_user (email, first_name, last_name, password,roles) VALUES ( 'fabien@gmail.com', 'Fabien', 'Chapeau', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test1@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test2@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test3@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ) [42102-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.Parser.readTableOrView(Parser.java:7628)
	at org.h2.command.Parser.readTableOrView(Parser.java:7599)
	at org.h2.command.Parser.parseInsert(Parser.java:1747)
	at org.h2.command.Parser.parsePrepared(Parser.java:954)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:815)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:605)
	... 31 common frames omitted
2022-03-11 10:59:36,481 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 14944 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 10:59:36,484 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 10:59:36,485 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 10:59:40,701 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: insert into registered_user (email, first_name, last_name, password,roles) VALUES ( 'fabien@gmail.com', 'Fabien', 'Chapeau', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test1@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test2@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test3@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ); nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "REGISTERED_USER" non trouvée
Table "REGISTERED_USER" not found; SQL statement:
insert into registered_user (email, first_name, last_name, password,roles) VALUES ( 'fabien@gmail.com', 'Fabien', 'Chapeau', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test1@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test2@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test3@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ) [42102-200]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.fabienit.biblioapi.BiblioApiApplication.main(BiblioApiApplication.java:10)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: insert into registered_user (email, first_name, last_name, password,roles) VALUES ( 'fabien@gmail.com', 'Fabien', 'Chapeau', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test1@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test2@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test3@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ); nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "REGISTERED_USER" non trouvée
Table "REGISTERED_USER" not found; SQL statement:
insert into registered_user (email, first_name, last_name, password,roles) VALUES ( 'fabien@gmail.com', 'Fabien', 'Chapeau', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test1@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test2@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test3@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ) [42102-200]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:626)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1807)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 15 common frames omitted
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "REGISTERED_USER" non trouvée
Table "REGISTERED_USER" not found; SQL statement:
insert into registered_user (email, first_name, last_name, password,roles) VALUES ( 'fabien@gmail.com', 'Fabien', 'Chapeau', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test1@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test2@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test3@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ) [42102-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.Parser.readTableOrView(Parser.java:7628)
	at org.h2.command.Parser.readTableOrView(Parser.java:7599)
	at org.h2.command.Parser.parseInsert(Parser.java:1747)
	at org.h2.command.Parser.parsePrepared(Parser.java:954)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:815)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:605)
	... 31 common frames omitted
2022-03-11 11:00:29,175 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 18016 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 11:00:29,185 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 11:00:29,186 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: dev
2022-03-11 11:00:36,423 DEBUG com.fabienit.biblioapi.configuration.SwaggerConfig$$EnhancerBySpringCGLIB$$2705182f [main] Set Swagger2 documentation
2022-03-11 11:00:37,248 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Started BiblioApiApplication in 8.688 seconds (JVM running for 9.615)
2022-03-11 11:10:59,137 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 18756 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 11:10:59,141 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 11:10:59,142 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 11:11:03,159 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.jdbc.datasource.init.UncategorizedScriptException: Failed to execute database script from resource [URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]]; nested exception is java.lang.IllegalArgumentException: 'script' must not be null or empty
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.fabienit.biblioapi.BiblioApiApplication.main(BiblioApiApplication.java:10)
Caused by: org.springframework.jdbc.datasource.init.UncategorizedScriptException: Failed to execute database script from resource [URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]]; nested exception is java.lang.IllegalArgumentException: 'script' must not be null or empty
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:649)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1807)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 15 common frames omitted
Caused by: java.lang.IllegalArgumentException: 'script' must not be null or empty
	at org.springframework.util.Assert.hasText(Assert.java:284)
	at org.springframework.jdbc.datasource.init.ScriptUtils.splitSqlScript(ScriptUtils.java:214)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:596)
	... 31 common frames omitted
2022-03-11 11:13:56,911 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 18008 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 11:13:56,915 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 11:13:56,918 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 11:14:00,905 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.jdbc.datasource.init.UncategorizedScriptException: Failed to execute database script from resource [URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]]; nested exception is java.lang.IllegalArgumentException: 'script' must not be null or empty
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.fabienit.biblioapi.BiblioApiApplication.main(BiblioApiApplication.java:10)
Caused by: org.springframework.jdbc.datasource.init.UncategorizedScriptException: Failed to execute database script from resource [URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]]; nested exception is java.lang.IllegalArgumentException: 'script' must not be null or empty
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:649)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1807)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 15 common frames omitted
Caused by: java.lang.IllegalArgumentException: 'script' must not be null or empty
	at org.springframework.util.Assert.hasText(Assert.java:284)
	at org.springframework.jdbc.datasource.init.ScriptUtils.splitSqlScript(ScriptUtils.java:214)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:596)
	... 31 common frames omitted
2022-03-11 11:15:04,961 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 16964 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 11:15:04,965 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 11:15:04,968 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 11:15:10,075 DEBUG com.fabienit.biblioapi.configuration.SwaggerConfig$$EnhancerBySpringCGLIB$$428f4581 [main] Set Swagger2 documentation
2022-03-11 11:15:10,700 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Started BiblioApiApplication in 6.178 seconds (JVM running for 7.062)
2022-03-11 11:19:03,521 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 6268 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 11:19:03,524 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 11:19:03,527 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 11:19:08,674 DEBUG com.fabienit.biblioapi.configuration.SwaggerConfig$$EnhancerBySpringCGLIB$$84fd5878 [main] Set Swagger2 documentation
2022-03-11 11:19:09,355 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Started BiblioApiApplication in 6.272 seconds (JVM running for 7.191)
2022-03-11 11:23:47,537 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 9880 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 11:23:47,540 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 11:23:47,543 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 11:23:52,558 DEBUG com.fabienit.biblioapi.configuration.SwaggerConfig$$EnhancerBySpringCGLIB$$d87639c3 [main] Set Swagger2 documentation
2022-03-11 11:23:53,215 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Started BiblioApiApplication in 6.108 seconds (JVM running for 6.945)
2022-03-11 11:25:28,637 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 18944 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 11:25:28,640 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 11:25:28,643 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 11:25:33,710 DEBUG com.fabienit.biblioapi.configuration.SwaggerConfig$$EnhancerBySpringCGLIB$$1d50e13f [main] Set Swagger2 documentation
2022-03-11 11:25:34,330 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Started BiblioApiApplication in 6.125 seconds (JVM running for 6.973)
2022-03-11 11:26:49,993 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 19264 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 11:26:49,996 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 11:26:49,999 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 11:26:55,098 DEBUG com.fabienit.biblioapi.configuration.SwaggerConfig$$EnhancerBySpringCGLIB$$3b509f48 [main] Set Swagger2 documentation
2022-03-11 11:26:55,765 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Started BiblioApiApplication in 6.195 seconds (JVM running for 7.068)
2022-03-11 11:29:43,974 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 18048 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 11:29:43,978 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 11:29:43,981 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 11:29:47,846 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is java.lang.IllegalArgumentException: Unrecognized legacy `hibernate.hbm2ddl.auto` value : `create-update`
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.fabienit.biblioapi.BiblioApiApplication.main(BiblioApiApplication.java:10)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is java.lang.IllegalArgumentException: Unrecognized legacy `hibernate.hbm2ddl.auto` value : `create-update`
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:403)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 16 common frames omitted
Caused by: java.lang.IllegalArgumentException: Unrecognized legacy `hibernate.hbm2ddl.auto` value : `create-update`
	at org.hibernate.tool.schema.Action.interpretHbm2ddlSetting(Action.java:181)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator$ActionGrouping.interpret(SchemaManagementToolCoordinator.java:490)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:53)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:320)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:462)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1249)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	... 20 common frames omitted
2022-03-11 11:30:24,694 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 18620 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 11:30:24,697 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 11:30:24,700 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 11:30:29,734 DEBUG com.fabienit.biblioapi.configuration.SwaggerConfig$$EnhancerBySpringCGLIB$$537f17ed [main] Set Swagger2 documentation
2022-03-11 11:30:30,356 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Started BiblioApiApplication in 6.094 seconds (JVM running for 6.954)
2022-03-11 11:36:11,241 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 17120 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 11:36:11,245 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 11:36:11,248 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 11:36:15,256 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: insert into registered_user (email, first_name, last_name, password,roles) VALUES ( 'fabien@gmail.com', 'Fabien', 'Chapeau', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test1@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test2@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test3@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ); nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "REGISTERED_USER" non trouvée
Table "REGISTERED_USER" not found; SQL statement:
insert into registered_user (email, first_name, last_name, password,roles) VALUES ( 'fabien@gmail.com', 'Fabien', 'Chapeau', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test1@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test2@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test3@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ) [42102-200]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.fabienit.biblioapi.BiblioApiApplication.main(BiblioApiApplication.java:10)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: insert into registered_user (email, first_name, last_name, password,roles) VALUES ( 'fabien@gmail.com', 'Fabien', 'Chapeau', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test1@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test2@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test3@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ); nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "REGISTERED_USER" non trouvée
Table "REGISTERED_USER" not found; SQL statement:
insert into registered_user (email, first_name, last_name, password,roles) VALUES ( 'fabien@gmail.com', 'Fabien', 'Chapeau', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test1@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test2@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test3@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ) [42102-200]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:626)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1807)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 15 common frames omitted
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "REGISTERED_USER" non trouvée
Table "REGISTERED_USER" not found; SQL statement:
insert into registered_user (email, first_name, last_name, password,roles) VALUES ( 'fabien@gmail.com', 'Fabien', 'Chapeau', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test1@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test2@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test3@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ) [42102-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.Parser.readTableOrView(Parser.java:7628)
	at org.h2.command.Parser.readTableOrView(Parser.java:7599)
	at org.h2.command.Parser.parseInsert(Parser.java:1747)
	at org.h2.command.Parser.parsePrepared(Parser.java:954)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:815)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:605)
	... 31 common frames omitted
2022-03-11 11:37:24,388 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 18776 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 11:37:24,391 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 11:37:24,394 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: dev
2022-03-11 11:37:29,456 DEBUG com.fabienit.biblioapi.configuration.SwaggerConfig$$EnhancerBySpringCGLIB$$6549037b [main] Set Swagger2 documentation
2022-03-11 11:37:30,073 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Started BiblioApiApplication in 6.097 seconds (JVM running for 6.958)
2022-03-11 11:41:34,174 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 19288 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 11:41:34,178 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 11:41:34,181 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 11:41:38,156 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: insert into registered_user (email, first_name, last_name, password,roles) VALUES ( 'fabien@gmail.com', 'Fabien', 'Chapeau', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test1@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test2@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test3@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ); nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "REGISTERED_USER" non trouvée
Table "REGISTERED_USER" not found; SQL statement:
insert into registered_user (email, first_name, last_name, password,roles) VALUES ( 'fabien@gmail.com', 'Fabien', 'Chapeau', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test1@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test2@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test3@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ) [42102-200]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.fabienit.biblioapi.BiblioApiApplication.main(BiblioApiApplication.java:10)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: insert into registered_user (email, first_name, last_name, password,roles) VALUES ( 'fabien@gmail.com', 'Fabien', 'Chapeau', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test1@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test2@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test3@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ); nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "REGISTERED_USER" non trouvée
Table "REGISTERED_USER" not found; SQL statement:
insert into registered_user (email, first_name, last_name, password,roles) VALUES ( 'fabien@gmail.com', 'Fabien', 'Chapeau', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test1@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test2@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test3@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ) [42102-200]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:626)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1807)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 15 common frames omitted
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "REGISTERED_USER" non trouvée
Table "REGISTERED_USER" not found; SQL statement:
insert into registered_user (email, first_name, last_name, password,roles) VALUES ( 'fabien@gmail.com', 'Fabien', 'Chapeau', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test1@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test2@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ), ( 'test3@gmail.com', 'userName', 'userLastName', '$2a$10$jPUTDV6/9AkC7NRPPzmvXuLJlfnKoAYo.uJuZc0aeJHGum.LpxO0a', 'USER' ) [42102-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.Parser.readTableOrView(Parser.java:7628)
	at org.h2.command.Parser.readTableOrView(Parser.java:7599)
	at org.h2.command.Parser.parseInsert(Parser.java:1747)
	at org.h2.command.Parser.parsePrepared(Parser.java:954)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:815)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:605)
	... 31 common frames omitted
2022-03-11 13:42:30,430 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 13884 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 13:42:30,433 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 13:42:30,436 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 13:42:34,446 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: CREATE DATABASE IF NOT EXISTS `bibliop7` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE DATABASE[*] IF NOT EXISTS `BIBLIOP7` DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; attendu "OR, FORCE, VIEW, ALIAS, SEQUENCE, USER, TRIGGER, ROLE, SCHEMA, CONSTANT, DOMAIN, TYPE, DATATYPE, AGGREGATE, LINKED, MEMORY, CACHED, LOCAL, GLOBAL, TEMP, TEMPORARY, TABLE, SYNONYM, PRIMARY, UNIQUE, HASH, SPATIAL, INDEX"
Syntax error in SQL statement "CREATE DATABASE[*] IF NOT EXISTS `BIBLIOP7` DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; expected "OR, FORCE, VIEW, ALIAS, SEQUENCE, USER, TRIGGER, ROLE, SCHEMA, CONSTANT, DOMAIN, TYPE, DATATYPE, AGGREGATE, LINKED, MEMORY, CACHED, LOCAL, GLOBAL, TEMP, TEMPORARY, TABLE, SYNONYM, PRIMARY, UNIQUE, HASH, SPATIAL, INDEX"; SQL statement:
CREATE DATABASE IF NOT EXISTS `bibliop7` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci [42001-200]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.fabienit.biblioapi.BiblioApiApplication.main(BiblioApiApplication.java:10)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: CREATE DATABASE IF NOT EXISTS `bibliop7` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE DATABASE[*] IF NOT EXISTS `BIBLIOP7` DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; attendu "OR, FORCE, VIEW, ALIAS, SEQUENCE, USER, TRIGGER, ROLE, SCHEMA, CONSTANT, DOMAIN, TYPE, DATATYPE, AGGREGATE, LINKED, MEMORY, CACHED, LOCAL, GLOBAL, TEMP, TEMPORARY, TABLE, SYNONYM, PRIMARY, UNIQUE, HASH, SPATIAL, INDEX"
Syntax error in SQL statement "CREATE DATABASE[*] IF NOT EXISTS `BIBLIOP7` DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; expected "OR, FORCE, VIEW, ALIAS, SEQUENCE, USER, TRIGGER, ROLE, SCHEMA, CONSTANT, DOMAIN, TYPE, DATATYPE, AGGREGATE, LINKED, MEMORY, CACHED, LOCAL, GLOBAL, TEMP, TEMPORARY, TABLE, SYNONYM, PRIMARY, UNIQUE, HASH, SPATIAL, INDEX"; SQL statement:
CREATE DATABASE IF NOT EXISTS `bibliop7` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci [42001-200]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:626)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1807)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 15 common frames omitted
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE DATABASE[*] IF NOT EXISTS `BIBLIOP7` DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; attendu "OR, FORCE, VIEW, ALIAS, SEQUENCE, USER, TRIGGER, ROLE, SCHEMA, CONSTANT, DOMAIN, TYPE, DATATYPE, AGGREGATE, LINKED, MEMORY, CACHED, LOCAL, GLOBAL, TEMP, TEMPORARY, TABLE, SYNONYM, PRIMARY, UNIQUE, HASH, SPATIAL, INDEX"
Syntax error in SQL statement "CREATE DATABASE[*] IF NOT EXISTS `BIBLIOP7` DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; expected "OR, FORCE, VIEW, ALIAS, SEQUENCE, USER, TRIGGER, ROLE, SCHEMA, CONSTANT, DOMAIN, TYPE, DATATYPE, AGGREGATE, LINKED, MEMORY, CACHED, LOCAL, GLOBAL, TEMP, TEMPORARY, TABLE, SYNONYM, PRIMARY, UNIQUE, HASH, SPATIAL, INDEX"; SQL statement:
CREATE DATABASE IF NOT EXISTS `bibliop7` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci [42001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.getSyntaxError(DbException.java:243)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1053)
	at org.h2.command.Parser.parseCreate(Parser.java:6313)
	at org.h2.command.Parser.parsePrepared(Parser.java:903)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:819)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:605)
	... 31 common frames omitted
2022-03-11 13:44:25,578 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 16044 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 13:44:25,581 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 13:44:25,584 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 13:44:29,574 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #2 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL, PRIMARY KEY (`book_id`,`library_id`), KEY `FKps56tmxe7vcjvfdececjdqlhu` (`library_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8; nested exception is org.h2.jdbc.JdbcSQLNonTransientException: Type de données inconnu: "FKPS56TMXE7VCJVFDECECJDQLHU"
Unknown data type: "FKPS56TMXE7VCJVFDECECJDQLHU"; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL, PRIMARY KEY (`book_id`,`library_id`), KEY `FKps56tmxe7vcjvfdececjdqlhu` (`library_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 [50004-200]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.fabienit.biblioapi.BiblioApiApplication.main(BiblioApiApplication.java:10)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #2 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL, PRIMARY KEY (`book_id`,`library_id`), KEY `FKps56tmxe7vcjvfdececjdqlhu` (`library_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8; nested exception is org.h2.jdbc.JdbcSQLNonTransientException: Type de données inconnu: "FKPS56TMXE7VCJVFDECECJDQLHU"
Unknown data type: "FKPS56TMXE7VCJVFDECECJDQLHU"; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL, PRIMARY KEY (`book_id`,`library_id`), KEY `FKps56tmxe7vcjvfdececjdqlhu` (`library_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 [50004-200]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:626)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1807)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 15 common frames omitted
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Type de données inconnu: "FKPS56TMXE7VCJVFDECECJDQLHU"
Unknown data type: "FKPS56TMXE7VCJVFDECECJDQLHU"; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL, PRIMARY KEY (`book_id`,`library_id`), KEY `FKps56tmxe7vcjvfdececjdqlhu` (`library_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 [50004-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:5971)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:5697)
	at org.h2.command.Parser.parseTableColumnDefinition(Parser.java:8442)
	at org.h2.command.Parser.parseCreateTable(Parser.java:8379)
	at org.h2.command.Parser.parseCreate(Parser.java:6276)
	at org.h2.command.Parser.parsePrepared(Parser.java:903)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:815)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:605)
	... 31 common frames omitted
2022-03-11 13:46:53,141 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 12084 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 13:46:53,144 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 13:46:53,147 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 13:46:57,083 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #2 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL, PRIMARY KEY (`book_id`,`library_id`), KEY (`library_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8; nested exception is org.h2.jdbc.JdbcSQLNonTransientException: Type de données inconnu: 
Unknown data type: ; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL, PRIMARY KEY (`book_id`,`library_id`), KEY (`library_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 [50004-200]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.fabienit.biblioapi.BiblioApiApplication.main(BiblioApiApplication.java:10)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #2 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL, PRIMARY KEY (`book_id`,`library_id`), KEY (`library_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8; nested exception is org.h2.jdbc.JdbcSQLNonTransientException: Type de données inconnu: 
Unknown data type: ; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL, PRIMARY KEY (`book_id`,`library_id`), KEY (`library_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 [50004-200]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:626)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1807)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 15 common frames omitted
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Type de données inconnu: 
Unknown data type: ; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL, PRIMARY KEY (`book_id`,`library_id`), KEY (`library_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 [50004-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:5971)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:5697)
	at org.h2.command.Parser.parseTableColumnDefinition(Parser.java:8442)
	at org.h2.command.Parser.parseCreateTable(Parser.java:8379)
	at org.h2.command.Parser.parseCreate(Parser.java:6276)
	at org.h2.command.Parser.parsePrepared(Parser.java:903)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:815)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:605)
	... 31 common frames omitted
2022-03-11 13:50:39,024 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 10180 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 13:50:39,027 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 13:50:39,031 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 13:50:43,007 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #2 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL, PRIMARY KEY (`book_id`,`library_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL, PRIMARY KEY (`BOOK_ID`,`LIBRARY_ID`) ) ENGINE=[*]INNODB DEFAULT CHARSET=UTF8"; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL, PRIMARY KEY (`BOOK_ID`,`LIBRARY_ID`) ) ENGINE=[*]INNODB DEFAULT CHARSET=UTF8"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL, PRIMARY KEY (`book_id`,`library_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 [42001-200]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.fabienit.biblioapi.BiblioApiApplication.main(BiblioApiApplication.java:10)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #2 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL, PRIMARY KEY (`book_id`,`library_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL, PRIMARY KEY (`BOOK_ID`,`LIBRARY_ID`) ) ENGINE=[*]INNODB DEFAULT CHARSET=UTF8"; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL, PRIMARY KEY (`BOOK_ID`,`LIBRARY_ID`) ) ENGINE=[*]INNODB DEFAULT CHARSET=UTF8"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL, PRIMARY KEY (`book_id`,`library_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 [42001-200]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:626)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1807)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 15 common frames omitted
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL, PRIMARY KEY (`BOOK_ID`,`LIBRARY_ID`) ) ENGINE=[*]INNODB DEFAULT CHARSET=UTF8"; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL, PRIMARY KEY (`BOOK_ID`,`LIBRARY_ID`) ) ENGINE=[*]INNODB DEFAULT CHARSET=UTF8"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL, PRIMARY KEY (`book_id`,`library_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 [42001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.getSyntaxError(DbException.java:243)
	at org.h2.command.Parser.readColumnIdentifier(Parser.java:4976)
	at org.h2.command.Parser.readUniqueIdentifier(Parser.java:4962)
	at org.h2.command.Parser.parseCreateTable(Parser.java:8387)
	at org.h2.command.Parser.parseCreate(Parser.java:6276)
	at org.h2.command.Parser.parsePrepared(Parser.java:903)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:815)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:605)
	... 31 common frames omitted
2022-03-11 13:55:20,899 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 16348 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 13:55:20,902 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 13:55:20,905 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 13:55:24,876 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #2 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) ENGINE=InnoDB DEFAULT CHARSET=utf8; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) ENGINE=[*]INNODB DEFAULT CHARSET=UTF8"; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) ENGINE=[*]INNODB DEFAULT CHARSET=UTF8"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) ENGINE=InnoDB DEFAULT CHARSET=utf8 [42001-200]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.fabienit.biblioapi.BiblioApiApplication.main(BiblioApiApplication.java:10)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #2 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) ENGINE=InnoDB DEFAULT CHARSET=utf8; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) ENGINE=[*]INNODB DEFAULT CHARSET=UTF8"; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) ENGINE=[*]INNODB DEFAULT CHARSET=UTF8"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) ENGINE=InnoDB DEFAULT CHARSET=utf8 [42001-200]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:626)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1807)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 15 common frames omitted
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) ENGINE=[*]INNODB DEFAULT CHARSET=UTF8"; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) ENGINE=[*]INNODB DEFAULT CHARSET=UTF8"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) ENGINE=InnoDB DEFAULT CHARSET=utf8 [42001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.getSyntaxError(DbException.java:243)
	at org.h2.command.Parser.readColumnIdentifier(Parser.java:4976)
	at org.h2.command.Parser.readUniqueIdentifier(Parser.java:4962)
	at org.h2.command.Parser.parseCreateTable(Parser.java:8387)
	at org.h2.command.Parser.parseCreate(Parser.java:6276)
	at org.h2.command.Parser.parsePrepared(Parser.java:903)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:815)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:605)
	... 31 common frames omitted
2022-03-11 13:56:57,443 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 7488 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 13:56:57,447 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 13:56:57,450 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 13:57:01,435 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #2 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) DROP TABLE IF EXISTS `book`; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) DROP[*] TABLE IF EXISTS `BOOK`"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) DROP[*] TABLE IF EXISTS `BOOK`"; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) DROP TABLE IF EXISTS `book` [42000-200]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.fabienit.biblioapi.BiblioApiApplication.main(BiblioApiApplication.java:10)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #2 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) DROP TABLE IF EXISTS `book`; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) DROP[*] TABLE IF EXISTS `BOOK`"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) DROP[*] TABLE IF EXISTS `BOOK`"; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) DROP TABLE IF EXISTS `book` [42000-200]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:626)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1807)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 15 common frames omitted
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) DROP[*] TABLE IF EXISTS `BOOK`"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) DROP[*] TABLE IF EXISTS `BOOK`"; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) DROP TABLE IF EXISTS `book` [42000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.getSyntaxError(DbException.java:229)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1051)
	at org.h2.command.Parser.prepareCommand(Parser.java:741)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:605)
	... 31 common frames omitted
2022-03-11 13:57:57,809 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 4344 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 13:57:57,812 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 13:57:57,815 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 13:58:01,772 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) DROP TABLE IF EXISTS `book`; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) DROP[*] TABLE IF EXISTS `BOOK`"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) DROP[*] TABLE IF EXISTS `BOOK`"; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) DROP TABLE IF EXISTS `book` [42000-200]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.fabienit.biblioapi.BiblioApiApplication.main(BiblioApiApplication.java:10)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) DROP TABLE IF EXISTS `book`; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) DROP[*] TABLE IF EXISTS `BOOK`"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) DROP[*] TABLE IF EXISTS `BOOK`"; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) DROP TABLE IF EXISTS `book` [42000-200]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:626)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1807)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 15 common frames omitted
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) DROP[*] TABLE IF EXISTS `BOOK`"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) DROP[*] TABLE IF EXISTS `BOOK`"; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) DROP TABLE IF EXISTS `book` [42000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.getSyntaxError(DbException.java:229)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1051)
	at org.h2.command.Parser.prepareCommand(Parser.java:741)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:605)
	... 31 common frames omitted
2022-03-11 14:17:20,527 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 4112 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 14:17:20,530 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 14:17:20,533 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 14:17:24,535 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #2 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) DROP TABLE IF EXISTS `book`; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) DROP[*] TABLE IF EXISTS `BOOK`"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) DROP[*] TABLE IF EXISTS `BOOK`"; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) DROP TABLE IF EXISTS `book` [42000-200]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.fabienit.biblioapi.BiblioApiApplication.main(BiblioApiApplication.java:10)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #2 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) DROP TABLE IF EXISTS `book`; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) DROP[*] TABLE IF EXISTS `BOOK`"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) DROP[*] TABLE IF EXISTS `BOOK`"; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) DROP TABLE IF EXISTS `book` [42000-200]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:626)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1807)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 15 common frames omitted
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) DROP[*] TABLE IF EXISTS `BOOK`"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) DROP[*] TABLE IF EXISTS `BOOK`"; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) DROP TABLE IF EXISTS `book` [42000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.getSyntaxError(DbException.java:229)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1051)
	at org.h2.command.Parser.prepareCommand(Parser.java:741)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:605)
	... 31 common frames omitted
2022-03-11 14:18:20,567 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 3116 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 14:18:20,571 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 14:18:20,575 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 14:18:24,563 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `book` ( `id` int(11) NOT NULL AUTO_INCREMENT, `author_first_name` varchar(255) DEFAULT NULL, `author_last_name` varchar(255) DEFAULT NULL, `pictureurl` varchar(255) DEFAULT NULL, `publication_date` date NOT NULL, `synopsis` varchar(1000) DEFAULT NULL, `title` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `borrow` ( `id` int(11) NOT NULL AUTO_INCREMENT, `book_returned` bit(1) NOT NULL, `borrow_date` date NOT NULL, `extended_duration` bit(1) NOT NULL, `return_date` date NOT NULL, `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `registered_user_id` int(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `library` ( `id` int(11) NOT NULL AUTO_INCREMENT, `name` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `registered_user` ( `id` int(11) NOT NULL AUTO_INCREMENT, `email` varchar(255) DEFAULT NULL, `first_name` varchar(255) DEFAULT NULL, `last_name` varchar(255) DEFAULT NULL, `password` varchar(255) DEFAULT NULL, `roles` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `reservation` ( `id` int(11) NOT NULL AUTO_INCREMENT, `avalaibility_date` date DEFAULT NULL, `notification_is_sent` bit(1) NOT NULL, `position` int(11) NOT NULL, `book_id` int(11) DEFAULT NULL, `library_id` int(11) DEFAULT NULL, `registered_user_id` int(11) DEFAULT NULL ) ALTER TABLE `available_copie` ADD CONSTRAINT `FK3cypfs2ivaoigc6eofcsu4mn5` FOREIGN KEY (`book_id`) REFERENCES `book` (`id`), ADD CONSTRAINT `FKps56tmxe7vcjvfdececjdqlhu` FOREIGN KEY (`library_id`) REFERENCES `library` (`id`); nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) CREATE[*] TABLE IF NOT EXISTS `BOOK` ( `ID` INT(11) NOT NULL AUTO_INCREMENT, `AUTHOR_FIRST_NAME` VARCHAR(255) DEFAULT NULL, `AUTHOR_LAST_NAME` VARCHAR(255) DEFAULT NULL, `PICTUREURL` VARCHAR(255) DEFAULT NULL, `PUBLICATION_DATE` DATE NOT NULL, `SYNOPSIS` VARCHAR(1000) DEFAULT NULL, `TITLE` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `BORROW` ( `ID` INT(11) NOT NULL AUTO_INCREMENT, `BOOK_RETURNED` BIT(1) NOT NULL, `BORROW_DATE` DATE NOT NULL, `EXTENDED_DURATION` BIT(1) NOT NULL, `RETURN_DATE` DATE NOT NULL, `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `REGISTERED_USER_ID` INT(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `LIBRARY` ( `ID` INT(11) NOT NULL AUTO_INCREMENT, `NAME` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `REGISTERED_USER` ( `ID` INT(11) NOT NULL AUTO_INCREMENT, `EMAIL` VARCHAR(255) DEFAULT NULL, `FIRST_NAME` VARCHAR(255) DEFAULT NULL, `LAST_NAME` VARCHAR(255) DEFAULT NULL, `PASSWORD` VARCHAR(255) DEFAULT NULL, `ROLES` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `RESERVATION` ( `ID` INT(11) NOT NULL AUTO_INCREMENT, `AVALAIBILITY_DATE` DATE DEFAULT NULL, `NOTIFICATION_IS_SENT` BIT(1) NOT NULL, `POSITION` INT(11) NOT NULL, `BOOK_ID` INT(11) DEFAULT NULL, `LIBRARY_ID` INT(11) DEFAULT NULL, `REGISTERED_USER_ID` INT(11) DEFAULT NULL ) ALTER TABLE `AVAILABLE_COPIE` ADD CONSTRAINT `FK3CYPFS2IVAOIGC6EOFCSU4MN5` FOREIGN KEY (`BOOK_ID`) REFERENCES `BOOK` (`ID`), ADD CONSTRAINT `FKPS56TMXE7VCJVFDECECJDQLHU` FOREIGN KEY (`LIBRARY_ID`) REFERENCES `LIBRARY` (`ID`)"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) CREATE[*] TABLE IF NOT EXISTS `BOOK` ( `ID` INT(11) NOT NULL AUTO_INCREMENT, `AUTHOR_FIRST_NAME` VARCHAR(255) DEFAULT NULL, `AUTHOR_LAST_NAME` VARCHAR(255) DEFAULT NULL, `PICTUREURL` VARCHAR(255) DEFAULT NULL, `PUBLICATION_DATE` DATE NOT NULL, `SYNOPSIS` VARCHAR(1000) DEFAULT NULL, `TITLE` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `BORROW` ( `ID` INT(11) NOT NULL AUTO_INCREMENT, `BOOK_RETURNED` BIT(1) NOT NULL, `BORROW_DATE` DATE NOT NULL, `EXTENDED_DURATION` BIT(1) NOT NULL, `RETURN_DATE` DATE NOT NULL, `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `REGISTERED_USER_ID` INT(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `LIBRARY` ( `ID` INT(11) NOT NULL AUTO_INCREMENT, `NAME` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `REGISTERED_USER` ( `ID` INT(11) NOT NULL AUTO_INCREMENT, `EMAIL` VARCHAR(255) DEFAULT NULL, `FIRST_NAME` VARCHAR(255) DEFAULT NULL, `LAST_NAME` VARCHAR(255) DEFAULT NULL, `PASSWORD` VARCHAR(255) DEFAULT NULL, `ROLES` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `RESERVATION` ( `ID` INT(11) NOT NULL AUTO_INCREMENT, `AVALAIBILITY_DATE` DATE DEFAULT NULL, `NOTIFICATION_IS_SENT` BIT(1) NOT NULL, `POSITION` INT(11) NOT NULL, `BOOK_ID` INT(11) DEFAULT NULL, `LIBRARY_ID` INT(11) DEFAULT NULL, `REGISTERED_USER_ID` INT(11) DEFAULT NULL ) ALTER TABLE `AVAILABLE_COPIE` ADD CONSTRAINT `FK3CYPFS2IVAOIGC6EOFCSU4MN5` FOREIGN KEY (`BOOK_ID`) REFERENCES `BOOK` (`ID`), ADD CONSTRAINT `FKPS56TMXE7VCJVFDECECJDQLHU` FOREIGN KEY (`LIBRARY_ID`) REFERENCES `LIBRARY` (`ID`)"; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `book` ( `id` int(11) NOT NULL AUTO_INCREMENT, `author_first_name` varchar(255) DEFAULT NULL, `author_last_name` varchar(255) DEFAULT NULL, `pictureurl` varchar(255) DEFAULT NULL, `publication_date` date NOT NULL, `synopsis` varchar(1000) DEFAULT NULL, `title` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `borrow` ( `id` int(11) NOT NULL AUTO_INCREMENT, `book_returned` bit(1) NOT NULL, `borrow_date` date NOT NULL, `extended_duration` bit(1) NOT NULL, `return_date` date NOT NULL, `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `registered_user_id` int(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `library` ( `id` int(11) NOT NULL AUTO_INCREMENT, `name` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `registered_user` ( `id` int(11) NOT NULL AUTO_INCREMENT, `email` varchar(255) DEFAULT NULL, `first_name` varchar(255) DEFAULT NULL, `last_name` varchar(255) DEFAULT NULL, `password` varchar(255) DEFAULT NULL, `roles` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `reservation` ( `id` int(11) NOT NULL AUTO_INCREMENT, `avalaibility_date` date DEFAULT NULL, `notification_is_sent` bit(1) NOT NULL, `position` int(11) NOT NULL, `book_id` int(11) DEFAULT NULL, `library_id` int(11) DEFAULT NULL, `registered_user_id` int(11) DEFAULT NULL ) ALTER TABLE `available_copie` ADD CONSTRAINT `FK3cypfs2ivaoigc6eofcsu4mn5` FOREIGN KEY (`book_id`) REFERENCES `book` (`id`), ADD CONSTRAINT `FKps56tmxe7vcjvfdececjdqlhu` FOREIGN KEY (`library_id`) REFERENCES `library` (`id`) [42000-200]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.fabienit.biblioapi.BiblioApiApplication.main(BiblioApiApplication.java:10)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `book` ( `id` int(11) NOT NULL AUTO_INCREMENT, `author_first_name` varchar(255) DEFAULT NULL, `author_last_name` varchar(255) DEFAULT NULL, `pictureurl` varchar(255) DEFAULT NULL, `publication_date` date NOT NULL, `synopsis` varchar(1000) DEFAULT NULL, `title` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `borrow` ( `id` int(11) NOT NULL AUTO_INCREMENT, `book_returned` bit(1) NOT NULL, `borrow_date` date NOT NULL, `extended_duration` bit(1) NOT NULL, `return_date` date NOT NULL, `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `registered_user_id` int(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `library` ( `id` int(11) NOT NULL AUTO_INCREMENT, `name` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `registered_user` ( `id` int(11) NOT NULL AUTO_INCREMENT, `email` varchar(255) DEFAULT NULL, `first_name` varchar(255) DEFAULT NULL, `last_name` varchar(255) DEFAULT NULL, `password` varchar(255) DEFAULT NULL, `roles` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `reservation` ( `id` int(11) NOT NULL AUTO_INCREMENT, `avalaibility_date` date DEFAULT NULL, `notification_is_sent` bit(1) NOT NULL, `position` int(11) NOT NULL, `book_id` int(11) DEFAULT NULL, `library_id` int(11) DEFAULT NULL, `registered_user_id` int(11) DEFAULT NULL ) ALTER TABLE `available_copie` ADD CONSTRAINT `FK3cypfs2ivaoigc6eofcsu4mn5` FOREIGN KEY (`book_id`) REFERENCES `book` (`id`), ADD CONSTRAINT `FKps56tmxe7vcjvfdececjdqlhu` FOREIGN KEY (`library_id`) REFERENCES `library` (`id`); nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) CREATE[*] TABLE IF NOT EXISTS `BOOK` ( `ID` INT(11) NOT NULL AUTO_INCREMENT, `AUTHOR_FIRST_NAME` VARCHAR(255) DEFAULT NULL, `AUTHOR_LAST_NAME` VARCHAR(255) DEFAULT NULL, `PICTUREURL` VARCHAR(255) DEFAULT NULL, `PUBLICATION_DATE` DATE NOT NULL, `SYNOPSIS` VARCHAR(1000) DEFAULT NULL, `TITLE` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `BORROW` ( `ID` INT(11) NOT NULL AUTO_INCREMENT, `BOOK_RETURNED` BIT(1) NOT NULL, `BORROW_DATE` DATE NOT NULL, `EXTENDED_DURATION` BIT(1) NOT NULL, `RETURN_DATE` DATE NOT NULL, `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `REGISTERED_USER_ID` INT(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `LIBRARY` ( `ID` INT(11) NOT NULL AUTO_INCREMENT, `NAME` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `REGISTERED_USER` ( `ID` INT(11) NOT NULL AUTO_INCREMENT, `EMAIL` VARCHAR(255) DEFAULT NULL, `FIRST_NAME` VARCHAR(255) DEFAULT NULL, `LAST_NAME` VARCHAR(255) DEFAULT NULL, `PASSWORD` VARCHAR(255) DEFAULT NULL, `ROLES` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `RESERVATION` ( `ID` INT(11) NOT NULL AUTO_INCREMENT, `AVALAIBILITY_DATE` DATE DEFAULT NULL, `NOTIFICATION_IS_SENT` BIT(1) NOT NULL, `POSITION` INT(11) NOT NULL, `BOOK_ID` INT(11) DEFAULT NULL, `LIBRARY_ID` INT(11) DEFAULT NULL, `REGISTERED_USER_ID` INT(11) DEFAULT NULL ) ALTER TABLE `AVAILABLE_COPIE` ADD CONSTRAINT `FK3CYPFS2IVAOIGC6EOFCSU4MN5` FOREIGN KEY (`BOOK_ID`) REFERENCES `BOOK` (`ID`), ADD CONSTRAINT `FKPS56TMXE7VCJVFDECECJDQLHU` FOREIGN KEY (`LIBRARY_ID`) REFERENCES `LIBRARY` (`ID`)"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) CREATE[*] TABLE IF NOT EXISTS `BOOK` ( `ID` INT(11) NOT NULL AUTO_INCREMENT, `AUTHOR_FIRST_NAME` VARCHAR(255) DEFAULT NULL, `AUTHOR_LAST_NAME` VARCHAR(255) DEFAULT NULL, `PICTUREURL` VARCHAR(255) DEFAULT NULL, `PUBLICATION_DATE` DATE NOT NULL, `SYNOPSIS` VARCHAR(1000) DEFAULT NULL, `TITLE` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `BORROW` ( `ID` INT(11) NOT NULL AUTO_INCREMENT, `BOOK_RETURNED` BIT(1) NOT NULL, `BORROW_DATE` DATE NOT NULL, `EXTENDED_DURATION` BIT(1) NOT NULL, `RETURN_DATE` DATE NOT NULL, `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `REGISTERED_USER_ID` INT(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `LIBRARY` ( `ID` INT(11) NOT NULL AUTO_INCREMENT, `NAME` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `REGISTERED_USER` ( `ID` INT(11) NOT NULL AUTO_INCREMENT, `EMAIL` VARCHAR(255) DEFAULT NULL, `FIRST_NAME` VARCHAR(255) DEFAULT NULL, `LAST_NAME` VARCHAR(255) DEFAULT NULL, `PASSWORD` VARCHAR(255) DEFAULT NULL, `ROLES` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `RESERVATION` ( `ID` INT(11) NOT NULL AUTO_INCREMENT, `AVALAIBILITY_DATE` DATE DEFAULT NULL, `NOTIFICATION_IS_SENT` BIT(1) NOT NULL, `POSITION` INT(11) NOT NULL, `BOOK_ID` INT(11) DEFAULT NULL, `LIBRARY_ID` INT(11) DEFAULT NULL, `REGISTERED_USER_ID` INT(11) DEFAULT NULL ) ALTER TABLE `AVAILABLE_COPIE` ADD CONSTRAINT `FK3CYPFS2IVAOIGC6EOFCSU4MN5` FOREIGN KEY (`BOOK_ID`) REFERENCES `BOOK` (`ID`), ADD CONSTRAINT `FKPS56TMXE7VCJVFDECECJDQLHU` FOREIGN KEY (`LIBRARY_ID`) REFERENCES `LIBRARY` (`ID`)"; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `book` ( `id` int(11) NOT NULL AUTO_INCREMENT, `author_first_name` varchar(255) DEFAULT NULL, `author_last_name` varchar(255) DEFAULT NULL, `pictureurl` varchar(255) DEFAULT NULL, `publication_date` date NOT NULL, `synopsis` varchar(1000) DEFAULT NULL, `title` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `borrow` ( `id` int(11) NOT NULL AUTO_INCREMENT, `book_returned` bit(1) NOT NULL, `borrow_date` date NOT NULL, `extended_duration` bit(1) NOT NULL, `return_date` date NOT NULL, `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `registered_user_id` int(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `library` ( `id` int(11) NOT NULL AUTO_INCREMENT, `name` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `registered_user` ( `id` int(11) NOT NULL AUTO_INCREMENT, `email` varchar(255) DEFAULT NULL, `first_name` varchar(255) DEFAULT NULL, `last_name` varchar(255) DEFAULT NULL, `password` varchar(255) DEFAULT NULL, `roles` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `reservation` ( `id` int(11) NOT NULL AUTO_INCREMENT, `avalaibility_date` date DEFAULT NULL, `notification_is_sent` bit(1) NOT NULL, `position` int(11) NOT NULL, `book_id` int(11) DEFAULT NULL, `library_id` int(11) DEFAULT NULL, `registered_user_id` int(11) DEFAULT NULL ) ALTER TABLE `available_copie` ADD CONSTRAINT `FK3cypfs2ivaoigc6eofcsu4mn5` FOREIGN KEY (`book_id`) REFERENCES `book` (`id`), ADD CONSTRAINT `FKps56tmxe7vcjvfdececjdqlhu` FOREIGN KEY (`library_id`) REFERENCES `library` (`id`) [42000-200]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:626)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1807)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 15 common frames omitted
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) CREATE[*] TABLE IF NOT EXISTS `BOOK` ( `ID` INT(11) NOT NULL AUTO_INCREMENT, `AUTHOR_FIRST_NAME` VARCHAR(255) DEFAULT NULL, `AUTHOR_LAST_NAME` VARCHAR(255) DEFAULT NULL, `PICTUREURL` VARCHAR(255) DEFAULT NULL, `PUBLICATION_DATE` DATE NOT NULL, `SYNOPSIS` VARCHAR(1000) DEFAULT NULL, `TITLE` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `BORROW` ( `ID` INT(11) NOT NULL AUTO_INCREMENT, `BOOK_RETURNED` BIT(1) NOT NULL, `BORROW_DATE` DATE NOT NULL, `EXTENDED_DURATION` BIT(1) NOT NULL, `RETURN_DATE` DATE NOT NULL, `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `REGISTERED_USER_ID` INT(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `LIBRARY` ( `ID` INT(11) NOT NULL AUTO_INCREMENT, `NAME` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `REGISTERED_USER` ( `ID` INT(11) NOT NULL AUTO_INCREMENT, `EMAIL` VARCHAR(255) DEFAULT NULL, `FIRST_NAME` VARCHAR(255) DEFAULT NULL, `LAST_NAME` VARCHAR(255) DEFAULT NULL, `PASSWORD` VARCHAR(255) DEFAULT NULL, `ROLES` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `RESERVATION` ( `ID` INT(11) NOT NULL AUTO_INCREMENT, `AVALAIBILITY_DATE` DATE DEFAULT NULL, `NOTIFICATION_IS_SENT` BIT(1) NOT NULL, `POSITION` INT(11) NOT NULL, `BOOK_ID` INT(11) DEFAULT NULL, `LIBRARY_ID` INT(11) DEFAULT NULL, `REGISTERED_USER_ID` INT(11) DEFAULT NULL ) ALTER TABLE `AVAILABLE_COPIE` ADD CONSTRAINT `FK3CYPFS2IVAOIGC6EOFCSU4MN5` FOREIGN KEY (`BOOK_ID`) REFERENCES `BOOK` (`ID`), ADD CONSTRAINT `FKPS56TMXE7VCJVFDECECJDQLHU` FOREIGN KEY (`LIBRARY_ID`) REFERENCES `LIBRARY` (`ID`)"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) CREATE[*] TABLE IF NOT EXISTS `BOOK` ( `ID` INT(11) NOT NULL AUTO_INCREMENT, `AUTHOR_FIRST_NAME` VARCHAR(255) DEFAULT NULL, `AUTHOR_LAST_NAME` VARCHAR(255) DEFAULT NULL, `PICTUREURL` VARCHAR(255) DEFAULT NULL, `PUBLICATION_DATE` DATE NOT NULL, `SYNOPSIS` VARCHAR(1000) DEFAULT NULL, `TITLE` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `BORROW` ( `ID` INT(11) NOT NULL AUTO_INCREMENT, `BOOK_RETURNED` BIT(1) NOT NULL, `BORROW_DATE` DATE NOT NULL, `EXTENDED_DURATION` BIT(1) NOT NULL, `RETURN_DATE` DATE NOT NULL, `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `REGISTERED_USER_ID` INT(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `LIBRARY` ( `ID` INT(11) NOT NULL AUTO_INCREMENT, `NAME` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `REGISTERED_USER` ( `ID` INT(11) NOT NULL AUTO_INCREMENT, `EMAIL` VARCHAR(255) DEFAULT NULL, `FIRST_NAME` VARCHAR(255) DEFAULT NULL, `LAST_NAME` VARCHAR(255) DEFAULT NULL, `PASSWORD` VARCHAR(255) DEFAULT NULL, `ROLES` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `RESERVATION` ( `ID` INT(11) NOT NULL AUTO_INCREMENT, `AVALAIBILITY_DATE` DATE DEFAULT NULL, `NOTIFICATION_IS_SENT` BIT(1) NOT NULL, `POSITION` INT(11) NOT NULL, `BOOK_ID` INT(11) DEFAULT NULL, `LIBRARY_ID` INT(11) DEFAULT NULL, `REGISTERED_USER_ID` INT(11) DEFAULT NULL ) ALTER TABLE `AVAILABLE_COPIE` ADD CONSTRAINT `FK3CYPFS2IVAOIGC6EOFCSU4MN5` FOREIGN KEY (`BOOK_ID`) REFERENCES `BOOK` (`ID`), ADD CONSTRAINT `FKPS56TMXE7VCJVFDECECJDQLHU` FOREIGN KEY (`LIBRARY_ID`) REFERENCES `LIBRARY` (`ID`)"; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `book` ( `id` int(11) NOT NULL AUTO_INCREMENT, `author_first_name` varchar(255) DEFAULT NULL, `author_last_name` varchar(255) DEFAULT NULL, `pictureurl` varchar(255) DEFAULT NULL, `publication_date` date NOT NULL, `synopsis` varchar(1000) DEFAULT NULL, `title` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `borrow` ( `id` int(11) NOT NULL AUTO_INCREMENT, `book_returned` bit(1) NOT NULL, `borrow_date` date NOT NULL, `extended_duration` bit(1) NOT NULL, `return_date` date NOT NULL, `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `registered_user_id` int(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `library` ( `id` int(11) NOT NULL AUTO_INCREMENT, `name` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `registered_user` ( `id` int(11) NOT NULL AUTO_INCREMENT, `email` varchar(255) DEFAULT NULL, `first_name` varchar(255) DEFAULT NULL, `last_name` varchar(255) DEFAULT NULL, `password` varchar(255) DEFAULT NULL, `roles` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `reservation` ( `id` int(11) NOT NULL AUTO_INCREMENT, `avalaibility_date` date DEFAULT NULL, `notification_is_sent` bit(1) NOT NULL, `position` int(11) NOT NULL, `book_id` int(11) DEFAULT NULL, `library_id` int(11) DEFAULT NULL, `registered_user_id` int(11) DEFAULT NULL ) ALTER TABLE `available_copie` ADD CONSTRAINT `FK3cypfs2ivaoigc6eofcsu4mn5` FOREIGN KEY (`book_id`) REFERENCES `book` (`id`), ADD CONSTRAINT `FKps56tmxe7vcjvfdececjdqlhu` FOREIGN KEY (`library_id`) REFERENCES `library` (`id`) [42000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.getSyntaxError(DbException.java:229)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1051)
	at org.h2.command.Parser.prepareCommand(Parser.java:741)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:605)
	... 31 common frames omitted
2022-03-11 14:22:58,716 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 7644 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 14:22:58,719 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 14:22:58,722 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 14:23:02,734 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL, PRIMARY KEY (`book_id`,`library_id`), KEY `FKps56tmxe7vcjvfdececjdqlhu` (`library_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8; nested exception is org.h2.jdbc.JdbcSQLNonTransientException: Type de données inconnu: "FKPS56TMXE7VCJVFDECECJDQLHU"
Unknown data type: "FKPS56TMXE7VCJVFDECECJDQLHU"; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL, PRIMARY KEY (`book_id`,`library_id`), KEY `FKps56tmxe7vcjvfdececjdqlhu` (`library_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 [50004-200]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.fabienit.biblioapi.BiblioApiApplication.main(BiblioApiApplication.java:10)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL, PRIMARY KEY (`book_id`,`library_id`), KEY `FKps56tmxe7vcjvfdececjdqlhu` (`library_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8; nested exception is org.h2.jdbc.JdbcSQLNonTransientException: Type de données inconnu: "FKPS56TMXE7VCJVFDECECJDQLHU"
Unknown data type: "FKPS56TMXE7VCJVFDECECJDQLHU"; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL, PRIMARY KEY (`book_id`,`library_id`), KEY `FKps56tmxe7vcjvfdececjdqlhu` (`library_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 [50004-200]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:626)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1807)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 15 common frames omitted
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Type de données inconnu: "FKPS56TMXE7VCJVFDECECJDQLHU"
Unknown data type: "FKPS56TMXE7VCJVFDECECJDQLHU"; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL, PRIMARY KEY (`book_id`,`library_id`), KEY `FKps56tmxe7vcjvfdececjdqlhu` (`library_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 [50004-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:5971)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:5697)
	at org.h2.command.Parser.parseTableColumnDefinition(Parser.java:8442)
	at org.h2.command.Parser.parseCreateTable(Parser.java:8379)
	at org.h2.command.Parser.parseCreate(Parser.java:6276)
	at org.h2.command.Parser.parsePrepared(Parser.java:903)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:815)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:605)
	... 31 common frames omitted
2022-03-11 14:33:58,942 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 4552 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 14:33:58,945 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 14:33:58,948 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 14:34:02,941 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL, PRIMARY KEY (`book_id`,`library_id`), KEY `FKps56tmxe7vcjvfdececjdqlhu` (`library_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8; nested exception is org.h2.jdbc.JdbcSQLNonTransientException: Type de données inconnu: "FKPS56TMXE7VCJVFDECECJDQLHU"
Unknown data type: "FKPS56TMXE7VCJVFDECECJDQLHU"; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL, PRIMARY KEY (`book_id`,`library_id`), KEY `FKps56tmxe7vcjvfdececjdqlhu` (`library_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 [50004-200]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.fabienit.biblioapi.BiblioApiApplication.main(BiblioApiApplication.java:10)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL, PRIMARY KEY (`book_id`,`library_id`), KEY `FKps56tmxe7vcjvfdececjdqlhu` (`library_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8; nested exception is org.h2.jdbc.JdbcSQLNonTransientException: Type de données inconnu: "FKPS56TMXE7VCJVFDECECJDQLHU"
Unknown data type: "FKPS56TMXE7VCJVFDECECJDQLHU"; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL, PRIMARY KEY (`book_id`,`library_id`), KEY `FKps56tmxe7vcjvfdececjdqlhu` (`library_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 [50004-200]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:626)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1807)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 15 common frames omitted
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Type de données inconnu: "FKPS56TMXE7VCJVFDECECJDQLHU"
Unknown data type: "FKPS56TMXE7VCJVFDECECJDQLHU"; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL, PRIMARY KEY (`book_id`,`library_id`), KEY `FKps56tmxe7vcjvfdececjdqlhu` (`library_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 [50004-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:5971)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:5697)
	at org.h2.command.Parser.parseTableColumnDefinition(Parser.java:8442)
	at org.h2.command.Parser.parseCreateTable(Parser.java:8379)
	at org.h2.command.Parser.parseCreate(Parser.java:6276)
	at org.h2.command.Parser.parsePrepared(Parser.java:903)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:815)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:605)
	... 31 common frames omitted
2022-03-11 14:35:14,745 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 19088 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 14:35:14,748 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 14:35:14,751 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 14:35:18,675 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) ENGINE=InnoDB DEFAULT CHARSET=utf8; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) ENGINE=[*]INNODB DEFAULT CHARSET=UTF8"; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) ENGINE=[*]INNODB DEFAULT CHARSET=UTF8"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) ENGINE=InnoDB DEFAULT CHARSET=utf8 [42001-200]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.fabienit.biblioapi.BiblioApiApplication.main(BiblioApiApplication.java:10)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) ENGINE=InnoDB DEFAULT CHARSET=utf8; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) ENGINE=[*]INNODB DEFAULT CHARSET=UTF8"; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) ENGINE=[*]INNODB DEFAULT CHARSET=UTF8"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) ENGINE=InnoDB DEFAULT CHARSET=utf8 [42001-200]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:626)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1807)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 15 common frames omitted
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) ENGINE=[*]INNODB DEFAULT CHARSET=UTF8"; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) ENGINE=[*]INNODB DEFAULT CHARSET=UTF8"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) ENGINE=InnoDB DEFAULT CHARSET=utf8 [42001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.getSyntaxError(DbException.java:243)
	at org.h2.command.Parser.readColumnIdentifier(Parser.java:4976)
	at org.h2.command.Parser.readUniqueIdentifier(Parser.java:4962)
	at org.h2.command.Parser.parseCreateTable(Parser.java:8387)
	at org.h2.command.Parser.parseCreate(Parser.java:6276)
	at org.h2.command.Parser.parsePrepared(Parser.java:903)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:815)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:605)
	... 31 common frames omitted
2022-03-11 15:06:49,944 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 15116 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 15:06:49,948 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 15:06:49,951 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 15:06:53,894 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) ENGINE=InnoDB DEFAULT CHARSET=utf8; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) ENGINE=[*]INNODB DEFAULT CHARSET=UTF8"; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) ENGINE=[*]INNODB DEFAULT CHARSET=UTF8"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) ENGINE=InnoDB DEFAULT CHARSET=utf8 [42001-200]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.fabienit.biblioapi.BiblioApiApplication.main(BiblioApiApplication.java:10)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) ENGINE=InnoDB DEFAULT CHARSET=utf8; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) ENGINE=[*]INNODB DEFAULT CHARSET=UTF8"; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) ENGINE=[*]INNODB DEFAULT CHARSET=UTF8"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) ENGINE=InnoDB DEFAULT CHARSET=utf8 [42001-200]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:626)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1807)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 15 common frames omitted
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) ENGINE=[*]INNODB DEFAULT CHARSET=UTF8"; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) ENGINE=[*]INNODB DEFAULT CHARSET=UTF8"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) ENGINE=InnoDB DEFAULT CHARSET=utf8 [42001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.getSyntaxError(DbException.java:243)
	at org.h2.command.Parser.readColumnIdentifier(Parser.java:4976)
	at org.h2.command.Parser.readUniqueIdentifier(Parser.java:4962)
	at org.h2.command.Parser.parseCreateTable(Parser.java:8387)
	at org.h2.command.Parser.parseCreate(Parser.java:6276)
	at org.h2.command.Parser.parsePrepared(Parser.java:903)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:815)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:605)
	... 31 common frames omitted
2022-03-11 15:09:47,213 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 19480 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 15:09:47,216 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 15:09:47,219 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 15:09:51,252 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `book` ( `id` int(11) NOT NULL , `author_first_name` varchar(255) DEFAULT NULL, `author_last_name` varchar(255) DEFAULT NULL, `pictureurl` varchar(255) DEFAULT NULL, `publication_date` date NOT NULL, `synopsis` varchar(1000) DEFAULT NULL, `title` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `borrow` ( `id` int(11) NOT NULL, `book_returned` bit(1) NOT NULL, `borrow_date` date NOT NULL, `extended_duration` bit(1) NOT NULL, `return_date` date NOT NULL, `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `registered_user_id` int(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `library` ( `id` int(11) NOT NULL, `name` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `registered_user` ( `id` int(11) NOT NULL, `email` varchar(255) DEFAULT NULL, `first_name` varchar(255) DEFAULT NULL, `last_name` varchar(255) DEFAULT NULL, `password` varchar(255) DEFAULT NULL, `roles` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `reservation` ( `id` int(11) NOT NULL, `avalaibility_date` date DEFAULT NULL, `notification_is_sent` bit(1) NOT NULL, `position` int(11) NOT NULL, `book_id` int(11) DEFAULT NULL, `library_id` int(11) DEFAULT NULL, `registered_user_id` int(11) DEFAULT NULL ) ALTER TABLE `available_copie` ADD CONSTRAINT `FK3cypfs2ivaoigc6eofcsu4mn5` FOREIGN KEY (`book_id`) REFERENCES `book` (`id`), ADD CONSTRAINT `FKps56tmxe7vcjvfdececjdqlhu` FOREIGN KEY (`library_id`) REFERENCES `library` (`id`); nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) CREATE[*] TABLE IF NOT EXISTS `BOOK` ( `ID` INT(11) NOT NULL , `AUTHOR_FIRST_NAME` VARCHAR(255) DEFAULT NULL, `AUTHOR_LAST_NAME` VARCHAR(255) DEFAULT NULL, `PICTUREURL` VARCHAR(255) DEFAULT NULL, `PUBLICATION_DATE` DATE NOT NULL, `SYNOPSIS` VARCHAR(1000) DEFAULT NULL, `TITLE` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `BORROW` ( `ID` INT(11) NOT NULL, `BOOK_RETURNED` BIT(1) NOT NULL, `BORROW_DATE` DATE NOT NULL, `EXTENDED_DURATION` BIT(1) NOT NULL, `RETURN_DATE` DATE NOT NULL, `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `REGISTERED_USER_ID` INT(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `LIBRARY` ( `ID` INT(11) NOT NULL, `NAME` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `REGISTERED_USER` ( `ID` INT(11) NOT NULL, `EMAIL` VARCHAR(255) DEFAULT NULL, `FIRST_NAME` VARCHAR(255) DEFAULT NULL, `LAST_NAME` VARCHAR(255) DEFAULT NULL, `PASSWORD` VARCHAR(255) DEFAULT NULL, `ROLES` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `RESERVATION` ( `ID` INT(11) NOT NULL, `AVALAIBILITY_DATE` DATE DEFAULT NULL, `NOTIFICATION_IS_SENT` BIT(1) NOT NULL, `POSITION` INT(11) NOT NULL, `BOOK_ID` INT(11) DEFAULT NULL, `LIBRARY_ID` INT(11) DEFAULT NULL, `REGISTERED_USER_ID` INT(11) DEFAULT NULL ) ALTER TABLE `AVAILABLE_COPIE` ADD CONSTRAINT `FK3CYPFS2IVAOIGC6EOFCSU4MN5` FOREIGN KEY (`BOOK_ID`) REFERENCES `BOOK` (`ID`), ADD CONSTRAINT `FKPS56TMXE7VCJVFDECECJDQLHU` FOREIGN KEY (`LIBRARY_ID`) REFERENCES `LIBRARY` (`ID`)"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) CREATE[*] TABLE IF NOT EXISTS `BOOK` ( `ID` INT(11) NOT NULL , `AUTHOR_FIRST_NAME` VARCHAR(255) DEFAULT NULL, `AUTHOR_LAST_NAME` VARCHAR(255) DEFAULT NULL, `PICTUREURL` VARCHAR(255) DEFAULT NULL, `PUBLICATION_DATE` DATE NOT NULL, `SYNOPSIS` VARCHAR(1000) DEFAULT NULL, `TITLE` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `BORROW` ( `ID` INT(11) NOT NULL, `BOOK_RETURNED` BIT(1) NOT NULL, `BORROW_DATE` DATE NOT NULL, `EXTENDED_DURATION` BIT(1) NOT NULL, `RETURN_DATE` DATE NOT NULL, `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `REGISTERED_USER_ID` INT(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `LIBRARY` ( `ID` INT(11) NOT NULL, `NAME` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `REGISTERED_USER` ( `ID` INT(11) NOT NULL, `EMAIL` VARCHAR(255) DEFAULT NULL, `FIRST_NAME` VARCHAR(255) DEFAULT NULL, `LAST_NAME` VARCHAR(255) DEFAULT NULL, `PASSWORD` VARCHAR(255) DEFAULT NULL, `ROLES` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `RESERVATION` ( `ID` INT(11) NOT NULL, `AVALAIBILITY_DATE` DATE DEFAULT NULL, `NOTIFICATION_IS_SENT` BIT(1) NOT NULL, `POSITION` INT(11) NOT NULL, `BOOK_ID` INT(11) DEFAULT NULL, `LIBRARY_ID` INT(11) DEFAULT NULL, `REGISTERED_USER_ID` INT(11) DEFAULT NULL ) ALTER TABLE `AVAILABLE_COPIE` ADD CONSTRAINT `FK3CYPFS2IVAOIGC6EOFCSU4MN5` FOREIGN KEY (`BOOK_ID`) REFERENCES `BOOK` (`ID`), ADD CONSTRAINT `FKPS56TMXE7VCJVFDECECJDQLHU` FOREIGN KEY (`LIBRARY_ID`) REFERENCES `LIBRARY` (`ID`)"; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `book` ( `id` int(11) NOT NULL , `author_first_name` varchar(255) DEFAULT NULL, `author_last_name` varchar(255) DEFAULT NULL, `pictureurl` varchar(255) DEFAULT NULL, `publication_date` date NOT NULL, `synopsis` varchar(1000) DEFAULT NULL, `title` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `borrow` ( `id` int(11) NOT NULL, `book_returned` bit(1) NOT NULL, `borrow_date` date NOT NULL, `extended_duration` bit(1) NOT NULL, `return_date` date NOT NULL, `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `registered_user_id` int(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `library` ( `id` int(11) NOT NULL, `name` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `registered_user` ( `id` int(11) NOT NULL, `email` varchar(255) DEFAULT NULL, `first_name` varchar(255) DEFAULT NULL, `last_name` varchar(255) DEFAULT NULL, `password` varchar(255) DEFAULT NULL, `roles` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `reservation` ( `id` int(11) NOT NULL, `avalaibility_date` date DEFAULT NULL, `notification_is_sent` bit(1) NOT NULL, `position` int(11) NOT NULL, `book_id` int(11) DEFAULT NULL, `library_id` int(11) DEFAULT NULL, `registered_user_id` int(11) DEFAULT NULL ) ALTER TABLE `available_copie` ADD CONSTRAINT `FK3cypfs2ivaoigc6eofcsu4mn5` FOREIGN KEY (`book_id`) REFERENCES `book` (`id`), ADD CONSTRAINT `FKps56tmxe7vcjvfdececjdqlhu` FOREIGN KEY (`library_id`) REFERENCES `library` (`id`) [42000-200]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.fabienit.biblioapi.BiblioApiApplication.main(BiblioApiApplication.java:10)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `book` ( `id` int(11) NOT NULL , `author_first_name` varchar(255) DEFAULT NULL, `author_last_name` varchar(255) DEFAULT NULL, `pictureurl` varchar(255) DEFAULT NULL, `publication_date` date NOT NULL, `synopsis` varchar(1000) DEFAULT NULL, `title` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `borrow` ( `id` int(11) NOT NULL, `book_returned` bit(1) NOT NULL, `borrow_date` date NOT NULL, `extended_duration` bit(1) NOT NULL, `return_date` date NOT NULL, `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `registered_user_id` int(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `library` ( `id` int(11) NOT NULL, `name` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `registered_user` ( `id` int(11) NOT NULL, `email` varchar(255) DEFAULT NULL, `first_name` varchar(255) DEFAULT NULL, `last_name` varchar(255) DEFAULT NULL, `password` varchar(255) DEFAULT NULL, `roles` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `reservation` ( `id` int(11) NOT NULL, `avalaibility_date` date DEFAULT NULL, `notification_is_sent` bit(1) NOT NULL, `position` int(11) NOT NULL, `book_id` int(11) DEFAULT NULL, `library_id` int(11) DEFAULT NULL, `registered_user_id` int(11) DEFAULT NULL ) ALTER TABLE `available_copie` ADD CONSTRAINT `FK3cypfs2ivaoigc6eofcsu4mn5` FOREIGN KEY (`book_id`) REFERENCES `book` (`id`), ADD CONSTRAINT `FKps56tmxe7vcjvfdececjdqlhu` FOREIGN KEY (`library_id`) REFERENCES `library` (`id`); nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) CREATE[*] TABLE IF NOT EXISTS `BOOK` ( `ID` INT(11) NOT NULL , `AUTHOR_FIRST_NAME` VARCHAR(255) DEFAULT NULL, `AUTHOR_LAST_NAME` VARCHAR(255) DEFAULT NULL, `PICTUREURL` VARCHAR(255) DEFAULT NULL, `PUBLICATION_DATE` DATE NOT NULL, `SYNOPSIS` VARCHAR(1000) DEFAULT NULL, `TITLE` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `BORROW` ( `ID` INT(11) NOT NULL, `BOOK_RETURNED` BIT(1) NOT NULL, `BORROW_DATE` DATE NOT NULL, `EXTENDED_DURATION` BIT(1) NOT NULL, `RETURN_DATE` DATE NOT NULL, `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `REGISTERED_USER_ID` INT(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `LIBRARY` ( `ID` INT(11) NOT NULL, `NAME` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `REGISTERED_USER` ( `ID` INT(11) NOT NULL, `EMAIL` VARCHAR(255) DEFAULT NULL, `FIRST_NAME` VARCHAR(255) DEFAULT NULL, `LAST_NAME` VARCHAR(255) DEFAULT NULL, `PASSWORD` VARCHAR(255) DEFAULT NULL, `ROLES` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `RESERVATION` ( `ID` INT(11) NOT NULL, `AVALAIBILITY_DATE` DATE DEFAULT NULL, `NOTIFICATION_IS_SENT` BIT(1) NOT NULL, `POSITION` INT(11) NOT NULL, `BOOK_ID` INT(11) DEFAULT NULL, `LIBRARY_ID` INT(11) DEFAULT NULL, `REGISTERED_USER_ID` INT(11) DEFAULT NULL ) ALTER TABLE `AVAILABLE_COPIE` ADD CONSTRAINT `FK3CYPFS2IVAOIGC6EOFCSU4MN5` FOREIGN KEY (`BOOK_ID`) REFERENCES `BOOK` (`ID`), ADD CONSTRAINT `FKPS56TMXE7VCJVFDECECJDQLHU` FOREIGN KEY (`LIBRARY_ID`) REFERENCES `LIBRARY` (`ID`)"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) CREATE[*] TABLE IF NOT EXISTS `BOOK` ( `ID` INT(11) NOT NULL , `AUTHOR_FIRST_NAME` VARCHAR(255) DEFAULT NULL, `AUTHOR_LAST_NAME` VARCHAR(255) DEFAULT NULL, `PICTUREURL` VARCHAR(255) DEFAULT NULL, `PUBLICATION_DATE` DATE NOT NULL, `SYNOPSIS` VARCHAR(1000) DEFAULT NULL, `TITLE` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `BORROW` ( `ID` INT(11) NOT NULL, `BOOK_RETURNED` BIT(1) NOT NULL, `BORROW_DATE` DATE NOT NULL, `EXTENDED_DURATION` BIT(1) NOT NULL, `RETURN_DATE` DATE NOT NULL, `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `REGISTERED_USER_ID` INT(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `LIBRARY` ( `ID` INT(11) NOT NULL, `NAME` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `REGISTERED_USER` ( `ID` INT(11) NOT NULL, `EMAIL` VARCHAR(255) DEFAULT NULL, `FIRST_NAME` VARCHAR(255) DEFAULT NULL, `LAST_NAME` VARCHAR(255) DEFAULT NULL, `PASSWORD` VARCHAR(255) DEFAULT NULL, `ROLES` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `RESERVATION` ( `ID` INT(11) NOT NULL, `AVALAIBILITY_DATE` DATE DEFAULT NULL, `NOTIFICATION_IS_SENT` BIT(1) NOT NULL, `POSITION` INT(11) NOT NULL, `BOOK_ID` INT(11) DEFAULT NULL, `LIBRARY_ID` INT(11) DEFAULT NULL, `REGISTERED_USER_ID` INT(11) DEFAULT NULL ) ALTER TABLE `AVAILABLE_COPIE` ADD CONSTRAINT `FK3CYPFS2IVAOIGC6EOFCSU4MN5` FOREIGN KEY (`BOOK_ID`) REFERENCES `BOOK` (`ID`), ADD CONSTRAINT `FKPS56TMXE7VCJVFDECECJDQLHU` FOREIGN KEY (`LIBRARY_ID`) REFERENCES `LIBRARY` (`ID`)"; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `book` ( `id` int(11) NOT NULL , `author_first_name` varchar(255) DEFAULT NULL, `author_last_name` varchar(255) DEFAULT NULL, `pictureurl` varchar(255) DEFAULT NULL, `publication_date` date NOT NULL, `synopsis` varchar(1000) DEFAULT NULL, `title` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `borrow` ( `id` int(11) NOT NULL, `book_returned` bit(1) NOT NULL, `borrow_date` date NOT NULL, `extended_duration` bit(1) NOT NULL, `return_date` date NOT NULL, `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `registered_user_id` int(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `library` ( `id` int(11) NOT NULL, `name` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `registered_user` ( `id` int(11) NOT NULL, `email` varchar(255) DEFAULT NULL, `first_name` varchar(255) DEFAULT NULL, `last_name` varchar(255) DEFAULT NULL, `password` varchar(255) DEFAULT NULL, `roles` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `reservation` ( `id` int(11) NOT NULL, `avalaibility_date` date DEFAULT NULL, `notification_is_sent` bit(1) NOT NULL, `position` int(11) NOT NULL, `book_id` int(11) DEFAULT NULL, `library_id` int(11) DEFAULT NULL, `registered_user_id` int(11) DEFAULT NULL ) ALTER TABLE `available_copie` ADD CONSTRAINT `FK3cypfs2ivaoigc6eofcsu4mn5` FOREIGN KEY (`book_id`) REFERENCES `book` (`id`), ADD CONSTRAINT `FKps56tmxe7vcjvfdececjdqlhu` FOREIGN KEY (`library_id`) REFERENCES `library` (`id`) [42000-200]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:626)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1807)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 15 common frames omitted
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) CREATE[*] TABLE IF NOT EXISTS `BOOK` ( `ID` INT(11) NOT NULL , `AUTHOR_FIRST_NAME` VARCHAR(255) DEFAULT NULL, `AUTHOR_LAST_NAME` VARCHAR(255) DEFAULT NULL, `PICTUREURL` VARCHAR(255) DEFAULT NULL, `PUBLICATION_DATE` DATE NOT NULL, `SYNOPSIS` VARCHAR(1000) DEFAULT NULL, `TITLE` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `BORROW` ( `ID` INT(11) NOT NULL, `BOOK_RETURNED` BIT(1) NOT NULL, `BORROW_DATE` DATE NOT NULL, `EXTENDED_DURATION` BIT(1) NOT NULL, `RETURN_DATE` DATE NOT NULL, `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `REGISTERED_USER_ID` INT(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `LIBRARY` ( `ID` INT(11) NOT NULL, `NAME` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `REGISTERED_USER` ( `ID` INT(11) NOT NULL, `EMAIL` VARCHAR(255) DEFAULT NULL, `FIRST_NAME` VARCHAR(255) DEFAULT NULL, `LAST_NAME` VARCHAR(255) DEFAULT NULL, `PASSWORD` VARCHAR(255) DEFAULT NULL, `ROLES` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `RESERVATION` ( `ID` INT(11) NOT NULL, `AVALAIBILITY_DATE` DATE DEFAULT NULL, `NOTIFICATION_IS_SENT` BIT(1) NOT NULL, `POSITION` INT(11) NOT NULL, `BOOK_ID` INT(11) DEFAULT NULL, `LIBRARY_ID` INT(11) DEFAULT NULL, `REGISTERED_USER_ID` INT(11) DEFAULT NULL ) ALTER TABLE `AVAILABLE_COPIE` ADD CONSTRAINT `FK3CYPFS2IVAOIGC6EOFCSU4MN5` FOREIGN KEY (`BOOK_ID`) REFERENCES `BOOK` (`ID`), ADD CONSTRAINT `FKPS56TMXE7VCJVFDECECJDQLHU` FOREIGN KEY (`LIBRARY_ID`) REFERENCES `LIBRARY` (`ID`)"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) CREATE[*] TABLE IF NOT EXISTS `BOOK` ( `ID` INT(11) NOT NULL , `AUTHOR_FIRST_NAME` VARCHAR(255) DEFAULT NULL, `AUTHOR_LAST_NAME` VARCHAR(255) DEFAULT NULL, `PICTUREURL` VARCHAR(255) DEFAULT NULL, `PUBLICATION_DATE` DATE NOT NULL, `SYNOPSIS` VARCHAR(1000) DEFAULT NULL, `TITLE` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `BORROW` ( `ID` INT(11) NOT NULL, `BOOK_RETURNED` BIT(1) NOT NULL, `BORROW_DATE` DATE NOT NULL, `EXTENDED_DURATION` BIT(1) NOT NULL, `RETURN_DATE` DATE NOT NULL, `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `REGISTERED_USER_ID` INT(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `LIBRARY` ( `ID` INT(11) NOT NULL, `NAME` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `REGISTERED_USER` ( `ID` INT(11) NOT NULL, `EMAIL` VARCHAR(255) DEFAULT NULL, `FIRST_NAME` VARCHAR(255) DEFAULT NULL, `LAST_NAME` VARCHAR(255) DEFAULT NULL, `PASSWORD` VARCHAR(255) DEFAULT NULL, `ROLES` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `RESERVATION` ( `ID` INT(11) NOT NULL, `AVALAIBILITY_DATE` DATE DEFAULT NULL, `NOTIFICATION_IS_SENT` BIT(1) NOT NULL, `POSITION` INT(11) NOT NULL, `BOOK_ID` INT(11) DEFAULT NULL, `LIBRARY_ID` INT(11) DEFAULT NULL, `REGISTERED_USER_ID` INT(11) DEFAULT NULL ) ALTER TABLE `AVAILABLE_COPIE` ADD CONSTRAINT `FK3CYPFS2IVAOIGC6EOFCSU4MN5` FOREIGN KEY (`BOOK_ID`) REFERENCES `BOOK` (`ID`), ADD CONSTRAINT `FKPS56TMXE7VCJVFDECECJDQLHU` FOREIGN KEY (`LIBRARY_ID`) REFERENCES `LIBRARY` (`ID`)"; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `book` ( `id` int(11) NOT NULL , `author_first_name` varchar(255) DEFAULT NULL, `author_last_name` varchar(255) DEFAULT NULL, `pictureurl` varchar(255) DEFAULT NULL, `publication_date` date NOT NULL, `synopsis` varchar(1000) DEFAULT NULL, `title` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `borrow` ( `id` int(11) NOT NULL, `book_returned` bit(1) NOT NULL, `borrow_date` date NOT NULL, `extended_duration` bit(1) NOT NULL, `return_date` date NOT NULL, `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `registered_user_id` int(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `library` ( `id` int(11) NOT NULL, `name` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `registered_user` ( `id` int(11) NOT NULL, `email` varchar(255) DEFAULT NULL, `first_name` varchar(255) DEFAULT NULL, `last_name` varchar(255) DEFAULT NULL, `password` varchar(255) DEFAULT NULL, `roles` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `reservation` ( `id` int(11) NOT NULL, `avalaibility_date` date DEFAULT NULL, `notification_is_sent` bit(1) NOT NULL, `position` int(11) NOT NULL, `book_id` int(11) DEFAULT NULL, `library_id` int(11) DEFAULT NULL, `registered_user_id` int(11) DEFAULT NULL ) ALTER TABLE `available_copie` ADD CONSTRAINT `FK3cypfs2ivaoigc6eofcsu4mn5` FOREIGN KEY (`book_id`) REFERENCES `book` (`id`), ADD CONSTRAINT `FKps56tmxe7vcjvfdececjdqlhu` FOREIGN KEY (`library_id`) REFERENCES `library` (`id`) [42000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.getSyntaxError(DbException.java:229)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1051)
	at org.h2.command.Parser.prepareCommand(Parser.java:741)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:605)
	... 31 common frames omitted
2022-03-11 15:30:43,546 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 7652 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 15:30:43,550 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 15:30:43,553 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 15:30:47,540 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO"; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "SET SQL_MODE[*] = ""NO_AUTO_VALUE_ON_ZERO"""; attendu "@, AUTOCOMMIT, EXCLUSIVE, IGNORECASE, PASSWORD, SALT, MODE, COMPRESS_LOB, DATABASE, COLLATION, BINARY_COLLATION, UUID_COLLATION, CLUSTER, DATABASE_EVENT_LISTENER, ALLOW_LITERALS, DEFAULT_TABLE_TYPE, CREATE, HSQLDB.DEFAULT_TABLE_TYPE, PAGE_STORE, CACHE_TYPE, FILE_LOCK, DB_CLOSE_ON_EXIT, AUTO_SERVER, AUTO_SERVER_PORT, AUTO_RECONNECT, ASSERT, ACCESS_MODE_DATA, OPEN_NEW, JMX, PAGE_SIZE, RECOVER, NAMES, SCOPE_GENERATED_KEYS, SCHEMA, CATALOG, DATESTYLE, SEARCH_PATH, SCHEMA_SEARCH_PATH, JAVA_OBJECT_SERIALIZER, IGNORE_CATALOGS, SESSION, TRANSACTION, LOGSIZE, FOREIGN_KEY_CHECKS"
Syntax error in SQL statement "SET SQL_MODE[*] = ""NO_AUTO_VALUE_ON_ZERO"""; expected "@, AUTOCOMMIT, EXCLUSIVE, IGNORECASE, PASSWORD, SALT, MODE, COMPRESS_LOB, DATABASE, COLLATION, BINARY_COLLATION, UUID_COLLATION, CLUSTER, DATABASE_EVENT_LISTENER, ALLOW_LITERALS, DEFAULT_TABLE_TYPE, CREATE, HSQLDB.DEFAULT_TABLE_TYPE, PAGE_STORE, CACHE_TYPE, FILE_LOCK, DB_CLOSE_ON_EXIT, AUTO_SERVER, AUTO_SERVER_PORT, AUTO_RECONNECT, ASSERT, ACCESS_MODE_DATA, OPEN_NEW, JMX, PAGE_SIZE, RECOVER, NAMES, SCOPE_GENERATED_KEYS, SCHEMA, CATALOG, DATESTYLE, SEARCH_PATH, SCHEMA_SEARCH_PATH, JAVA_OBJECT_SERIALIZER, IGNORE_CATALOGS, SESSION, TRANSACTION, LOGSIZE, FOREIGN_KEY_CHECKS"; SQL statement:
SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO" [42001-200]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.fabienit.biblioapi.BiblioApiApplication.main(BiblioApiApplication.java:10)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO"; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "SET SQL_MODE[*] = ""NO_AUTO_VALUE_ON_ZERO"""; attendu "@, AUTOCOMMIT, EXCLUSIVE, IGNORECASE, PASSWORD, SALT, MODE, COMPRESS_LOB, DATABASE, COLLATION, BINARY_COLLATION, UUID_COLLATION, CLUSTER, DATABASE_EVENT_LISTENER, ALLOW_LITERALS, DEFAULT_TABLE_TYPE, CREATE, HSQLDB.DEFAULT_TABLE_TYPE, PAGE_STORE, CACHE_TYPE, FILE_LOCK, DB_CLOSE_ON_EXIT, AUTO_SERVER, AUTO_SERVER_PORT, AUTO_RECONNECT, ASSERT, ACCESS_MODE_DATA, OPEN_NEW, JMX, PAGE_SIZE, RECOVER, NAMES, SCOPE_GENERATED_KEYS, SCHEMA, CATALOG, DATESTYLE, SEARCH_PATH, SCHEMA_SEARCH_PATH, JAVA_OBJECT_SERIALIZER, IGNORE_CATALOGS, SESSION, TRANSACTION, LOGSIZE, FOREIGN_KEY_CHECKS"
Syntax error in SQL statement "SET SQL_MODE[*] = ""NO_AUTO_VALUE_ON_ZERO"""; expected "@, AUTOCOMMIT, EXCLUSIVE, IGNORECASE, PASSWORD, SALT, MODE, COMPRESS_LOB, DATABASE, COLLATION, BINARY_COLLATION, UUID_COLLATION, CLUSTER, DATABASE_EVENT_LISTENER, ALLOW_LITERALS, DEFAULT_TABLE_TYPE, CREATE, HSQLDB.DEFAULT_TABLE_TYPE, PAGE_STORE, CACHE_TYPE, FILE_LOCK, DB_CLOSE_ON_EXIT, AUTO_SERVER, AUTO_SERVER_PORT, AUTO_RECONNECT, ASSERT, ACCESS_MODE_DATA, OPEN_NEW, JMX, PAGE_SIZE, RECOVER, NAMES, SCOPE_GENERATED_KEYS, SCHEMA, CATALOG, DATESTYLE, SEARCH_PATH, SCHEMA_SEARCH_PATH, JAVA_OBJECT_SERIALIZER, IGNORE_CATALOGS, SESSION, TRANSACTION, LOGSIZE, FOREIGN_KEY_CHECKS"; SQL statement:
SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO" [42001-200]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:626)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1807)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 15 common frames omitted
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "SET SQL_MODE[*] = ""NO_AUTO_VALUE_ON_ZERO"""; attendu "@, AUTOCOMMIT, EXCLUSIVE, IGNORECASE, PASSWORD, SALT, MODE, COMPRESS_LOB, DATABASE, COLLATION, BINARY_COLLATION, UUID_COLLATION, CLUSTER, DATABASE_EVENT_LISTENER, ALLOW_LITERALS, DEFAULT_TABLE_TYPE, CREATE, HSQLDB.DEFAULT_TABLE_TYPE, PAGE_STORE, CACHE_TYPE, FILE_LOCK, DB_CLOSE_ON_EXIT, AUTO_SERVER, AUTO_SERVER_PORT, AUTO_RECONNECT, ASSERT, ACCESS_MODE_DATA, OPEN_NEW, JMX, PAGE_SIZE, RECOVER, NAMES, SCOPE_GENERATED_KEYS, SCHEMA, CATALOG, DATESTYLE, SEARCH_PATH, SCHEMA_SEARCH_PATH, JAVA_OBJECT_SERIALIZER, IGNORE_CATALOGS, SESSION, TRANSACTION, LOGSIZE, FOREIGN_KEY_CHECKS"
Syntax error in SQL statement "SET SQL_MODE[*] = ""NO_AUTO_VALUE_ON_ZERO"""; expected "@, AUTOCOMMIT, EXCLUSIVE, IGNORECASE, PASSWORD, SALT, MODE, COMPRESS_LOB, DATABASE, COLLATION, BINARY_COLLATION, UUID_COLLATION, CLUSTER, DATABASE_EVENT_LISTENER, ALLOW_LITERALS, DEFAULT_TABLE_TYPE, CREATE, HSQLDB.DEFAULT_TABLE_TYPE, PAGE_STORE, CACHE_TYPE, FILE_LOCK, DB_CLOSE_ON_EXIT, AUTO_SERVER, AUTO_SERVER_PORT, AUTO_RECONNECT, ASSERT, ACCESS_MODE_DATA, OPEN_NEW, JMX, PAGE_SIZE, RECOVER, NAMES, SCOPE_GENERATED_KEYS, SCHEMA, CATALOG, DATESTYLE, SEARCH_PATH, SCHEMA_SEARCH_PATH, JAVA_OBJECT_SERIALIZER, IGNORE_CATALOGS, SESSION, TRANSACTION, LOGSIZE, FOREIGN_KEY_CHECKS"; SQL statement:
SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO" [42001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.getSyntaxError(DbException.java:243)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1053)
	at org.h2.command.Parser.parseSet(Parser.java:7411)
	at org.h2.command.Parser.parsePrepared(Parser.java:987)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:819)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:605)
	... 31 common frames omitted
2022-03-11 15:31:31,379 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 6864 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 15:31:31,382 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 15:31:31,386 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 15:31:35,338 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO"; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "SET SQL_MODE[*] = ""NO_AUTO_VALUE_ON_ZERO"""; attendu "@, AUTOCOMMIT, EXCLUSIVE, IGNORECASE, PASSWORD, SALT, MODE, COMPRESS_LOB, DATABASE, COLLATION, BINARY_COLLATION, UUID_COLLATION, CLUSTER, DATABASE_EVENT_LISTENER, ALLOW_LITERALS, DEFAULT_TABLE_TYPE, CREATE, HSQLDB.DEFAULT_TABLE_TYPE, PAGE_STORE, CACHE_TYPE, FILE_LOCK, DB_CLOSE_ON_EXIT, AUTO_SERVER, AUTO_SERVER_PORT, AUTO_RECONNECT, ASSERT, ACCESS_MODE_DATA, OPEN_NEW, JMX, PAGE_SIZE, RECOVER, NAMES, SCOPE_GENERATED_KEYS, SCHEMA, CATALOG, DATESTYLE, SEARCH_PATH, SCHEMA_SEARCH_PATH, JAVA_OBJECT_SERIALIZER, IGNORE_CATALOGS, SESSION, TRANSACTION, LOGSIZE, FOREIGN_KEY_CHECKS"
Syntax error in SQL statement "SET SQL_MODE[*] = ""NO_AUTO_VALUE_ON_ZERO"""; expected "@, AUTOCOMMIT, EXCLUSIVE, IGNORECASE, PASSWORD, SALT, MODE, COMPRESS_LOB, DATABASE, COLLATION, BINARY_COLLATION, UUID_COLLATION, CLUSTER, DATABASE_EVENT_LISTENER, ALLOW_LITERALS, DEFAULT_TABLE_TYPE, CREATE, HSQLDB.DEFAULT_TABLE_TYPE, PAGE_STORE, CACHE_TYPE, FILE_LOCK, DB_CLOSE_ON_EXIT, AUTO_SERVER, AUTO_SERVER_PORT, AUTO_RECONNECT, ASSERT, ACCESS_MODE_DATA, OPEN_NEW, JMX, PAGE_SIZE, RECOVER, NAMES, SCOPE_GENERATED_KEYS, SCHEMA, CATALOG, DATESTYLE, SEARCH_PATH, SCHEMA_SEARCH_PATH, JAVA_OBJECT_SERIALIZER, IGNORE_CATALOGS, SESSION, TRANSACTION, LOGSIZE, FOREIGN_KEY_CHECKS"; SQL statement:
SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO" [42001-200]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.fabienit.biblioapi.BiblioApiApplication.main(BiblioApiApplication.java:10)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO"; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "SET SQL_MODE[*] = ""NO_AUTO_VALUE_ON_ZERO"""; attendu "@, AUTOCOMMIT, EXCLUSIVE, IGNORECASE, PASSWORD, SALT, MODE, COMPRESS_LOB, DATABASE, COLLATION, BINARY_COLLATION, UUID_COLLATION, CLUSTER, DATABASE_EVENT_LISTENER, ALLOW_LITERALS, DEFAULT_TABLE_TYPE, CREATE, HSQLDB.DEFAULT_TABLE_TYPE, PAGE_STORE, CACHE_TYPE, FILE_LOCK, DB_CLOSE_ON_EXIT, AUTO_SERVER, AUTO_SERVER_PORT, AUTO_RECONNECT, ASSERT, ACCESS_MODE_DATA, OPEN_NEW, JMX, PAGE_SIZE, RECOVER, NAMES, SCOPE_GENERATED_KEYS, SCHEMA, CATALOG, DATESTYLE, SEARCH_PATH, SCHEMA_SEARCH_PATH, JAVA_OBJECT_SERIALIZER, IGNORE_CATALOGS, SESSION, TRANSACTION, LOGSIZE, FOREIGN_KEY_CHECKS"
Syntax error in SQL statement "SET SQL_MODE[*] = ""NO_AUTO_VALUE_ON_ZERO"""; expected "@, AUTOCOMMIT, EXCLUSIVE, IGNORECASE, PASSWORD, SALT, MODE, COMPRESS_LOB, DATABASE, COLLATION, BINARY_COLLATION, UUID_COLLATION, CLUSTER, DATABASE_EVENT_LISTENER, ALLOW_LITERALS, DEFAULT_TABLE_TYPE, CREATE, HSQLDB.DEFAULT_TABLE_TYPE, PAGE_STORE, CACHE_TYPE, FILE_LOCK, DB_CLOSE_ON_EXIT, AUTO_SERVER, AUTO_SERVER_PORT, AUTO_RECONNECT, ASSERT, ACCESS_MODE_DATA, OPEN_NEW, JMX, PAGE_SIZE, RECOVER, NAMES, SCOPE_GENERATED_KEYS, SCHEMA, CATALOG, DATESTYLE, SEARCH_PATH, SCHEMA_SEARCH_PATH, JAVA_OBJECT_SERIALIZER, IGNORE_CATALOGS, SESSION, TRANSACTION, LOGSIZE, FOREIGN_KEY_CHECKS"; SQL statement:
SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO" [42001-200]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:626)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1807)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 15 common frames omitted
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "SET SQL_MODE[*] = ""NO_AUTO_VALUE_ON_ZERO"""; attendu "@, AUTOCOMMIT, EXCLUSIVE, IGNORECASE, PASSWORD, SALT, MODE, COMPRESS_LOB, DATABASE, COLLATION, BINARY_COLLATION, UUID_COLLATION, CLUSTER, DATABASE_EVENT_LISTENER, ALLOW_LITERALS, DEFAULT_TABLE_TYPE, CREATE, HSQLDB.DEFAULT_TABLE_TYPE, PAGE_STORE, CACHE_TYPE, FILE_LOCK, DB_CLOSE_ON_EXIT, AUTO_SERVER, AUTO_SERVER_PORT, AUTO_RECONNECT, ASSERT, ACCESS_MODE_DATA, OPEN_NEW, JMX, PAGE_SIZE, RECOVER, NAMES, SCOPE_GENERATED_KEYS, SCHEMA, CATALOG, DATESTYLE, SEARCH_PATH, SCHEMA_SEARCH_PATH, JAVA_OBJECT_SERIALIZER, IGNORE_CATALOGS, SESSION, TRANSACTION, LOGSIZE, FOREIGN_KEY_CHECKS"
Syntax error in SQL statement "SET SQL_MODE[*] = ""NO_AUTO_VALUE_ON_ZERO"""; expected "@, AUTOCOMMIT, EXCLUSIVE, IGNORECASE, PASSWORD, SALT, MODE, COMPRESS_LOB, DATABASE, COLLATION, BINARY_COLLATION, UUID_COLLATION, CLUSTER, DATABASE_EVENT_LISTENER, ALLOW_LITERALS, DEFAULT_TABLE_TYPE, CREATE, HSQLDB.DEFAULT_TABLE_TYPE, PAGE_STORE, CACHE_TYPE, FILE_LOCK, DB_CLOSE_ON_EXIT, AUTO_SERVER, AUTO_SERVER_PORT, AUTO_RECONNECT, ASSERT, ACCESS_MODE_DATA, OPEN_NEW, JMX, PAGE_SIZE, RECOVER, NAMES, SCOPE_GENERATED_KEYS, SCHEMA, CATALOG, DATESTYLE, SEARCH_PATH, SCHEMA_SEARCH_PATH, JAVA_OBJECT_SERIALIZER, IGNORE_CATALOGS, SESSION, TRANSACTION, LOGSIZE, FOREIGN_KEY_CHECKS"; SQL statement:
SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO" [42001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.getSyntaxError(DbException.java:243)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1053)
	at org.h2.command.Parser.parseSet(Parser.java:7411)
	at org.h2.command.Parser.parsePrepared(Parser.java:987)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:819)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:605)
	... 31 common frames omitted
2022-03-11 15:32:05,586 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 19804 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 15:32:05,589 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 15:32:05,592 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 15:32:09,681 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `book` ( `id` int(11) NOT NULL , `author_first_name` varchar(255) DEFAULT NULL, `author_last_name` varchar(255) DEFAULT NULL, `pictureurl` varchar(255) DEFAULT NULL, `publication_date` date NOT NULL, `synopsis` varchar(1000) DEFAULT NULL, `title` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `borrow` ( `id` int(11) NOT NULL, `book_returned` bit(1) NOT NULL, `borrow_date` date NOT NULL, `extended_duration` bit(1) NOT NULL, `return_date` date NOT NULL, `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `registered_user_id` int(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `library` ( `id` int(11) NOT NULL, `name` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `registered_user` ( `id` int(11) NOT NULL, `email` varchar(255) DEFAULT NULL, `first_name` varchar(255) DEFAULT NULL, `last_name` varchar(255) DEFAULT NULL, `password` varchar(255) DEFAULT NULL, `roles` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `reservation` ( `id` int(11) NOT NULL, `avalaibility_date` date DEFAULT NULL, `notification_is_sent` bit(1) NOT NULL, `position` int(11) NOT NULL, `book_id` int(11) DEFAULT NULL, `library_id` int(11) DEFAULT NULL, `registered_user_id` int(11) DEFAULT NULL ) ALTER TABLE `available_copie` ADD CONSTRAINT `FK3cypfs2ivaoigc6eofcsu4mn5` FOREIGN KEY (`book_id`) REFERENCES `book` (`id`), ADD CONSTRAINT `FKps56tmxe7vcjvfdececjdqlhu` FOREIGN KEY (`library_id`) REFERENCES `library` (`id`); nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) CREATE[*] TABLE IF NOT EXISTS `BOOK` ( `ID` INT(11) NOT NULL , `AUTHOR_FIRST_NAME` VARCHAR(255) DEFAULT NULL, `AUTHOR_LAST_NAME` VARCHAR(255) DEFAULT NULL, `PICTUREURL` VARCHAR(255) DEFAULT NULL, `PUBLICATION_DATE` DATE NOT NULL, `SYNOPSIS` VARCHAR(1000) DEFAULT NULL, `TITLE` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `BORROW` ( `ID` INT(11) NOT NULL, `BOOK_RETURNED` BIT(1) NOT NULL, `BORROW_DATE` DATE NOT NULL, `EXTENDED_DURATION` BIT(1) NOT NULL, `RETURN_DATE` DATE NOT NULL, `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `REGISTERED_USER_ID` INT(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `LIBRARY` ( `ID` INT(11) NOT NULL, `NAME` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `REGISTERED_USER` ( `ID` INT(11) NOT NULL, `EMAIL` VARCHAR(255) DEFAULT NULL, `FIRST_NAME` VARCHAR(255) DEFAULT NULL, `LAST_NAME` VARCHAR(255) DEFAULT NULL, `PASSWORD` VARCHAR(255) DEFAULT NULL, `ROLES` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `RESERVATION` ( `ID` INT(11) NOT NULL, `AVALAIBILITY_DATE` DATE DEFAULT NULL, `NOTIFICATION_IS_SENT` BIT(1) NOT NULL, `POSITION` INT(11) NOT NULL, `BOOK_ID` INT(11) DEFAULT NULL, `LIBRARY_ID` INT(11) DEFAULT NULL, `REGISTERED_USER_ID` INT(11) DEFAULT NULL ) ALTER TABLE `AVAILABLE_COPIE` ADD CONSTRAINT `FK3CYPFS2IVAOIGC6EOFCSU4MN5` FOREIGN KEY (`BOOK_ID`) REFERENCES `BOOK` (`ID`), ADD CONSTRAINT `FKPS56TMXE7VCJVFDECECJDQLHU` FOREIGN KEY (`LIBRARY_ID`) REFERENCES `LIBRARY` (`ID`)"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) CREATE[*] TABLE IF NOT EXISTS `BOOK` ( `ID` INT(11) NOT NULL , `AUTHOR_FIRST_NAME` VARCHAR(255) DEFAULT NULL, `AUTHOR_LAST_NAME` VARCHAR(255) DEFAULT NULL, `PICTUREURL` VARCHAR(255) DEFAULT NULL, `PUBLICATION_DATE` DATE NOT NULL, `SYNOPSIS` VARCHAR(1000) DEFAULT NULL, `TITLE` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `BORROW` ( `ID` INT(11) NOT NULL, `BOOK_RETURNED` BIT(1) NOT NULL, `BORROW_DATE` DATE NOT NULL, `EXTENDED_DURATION` BIT(1) NOT NULL, `RETURN_DATE` DATE NOT NULL, `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `REGISTERED_USER_ID` INT(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `LIBRARY` ( `ID` INT(11) NOT NULL, `NAME` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `REGISTERED_USER` ( `ID` INT(11) NOT NULL, `EMAIL` VARCHAR(255) DEFAULT NULL, `FIRST_NAME` VARCHAR(255) DEFAULT NULL, `LAST_NAME` VARCHAR(255) DEFAULT NULL, `PASSWORD` VARCHAR(255) DEFAULT NULL, `ROLES` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `RESERVATION` ( `ID` INT(11) NOT NULL, `AVALAIBILITY_DATE` DATE DEFAULT NULL, `NOTIFICATION_IS_SENT` BIT(1) NOT NULL, `POSITION` INT(11) NOT NULL, `BOOK_ID` INT(11) DEFAULT NULL, `LIBRARY_ID` INT(11) DEFAULT NULL, `REGISTERED_USER_ID` INT(11) DEFAULT NULL ) ALTER TABLE `AVAILABLE_COPIE` ADD CONSTRAINT `FK3CYPFS2IVAOIGC6EOFCSU4MN5` FOREIGN KEY (`BOOK_ID`) REFERENCES `BOOK` (`ID`), ADD CONSTRAINT `FKPS56TMXE7VCJVFDECECJDQLHU` FOREIGN KEY (`LIBRARY_ID`) REFERENCES `LIBRARY` (`ID`)"; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `book` ( `id` int(11) NOT NULL , `author_first_name` varchar(255) DEFAULT NULL, `author_last_name` varchar(255) DEFAULT NULL, `pictureurl` varchar(255) DEFAULT NULL, `publication_date` date NOT NULL, `synopsis` varchar(1000) DEFAULT NULL, `title` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `borrow` ( `id` int(11) NOT NULL, `book_returned` bit(1) NOT NULL, `borrow_date` date NOT NULL, `extended_duration` bit(1) NOT NULL, `return_date` date NOT NULL, `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `registered_user_id` int(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `library` ( `id` int(11) NOT NULL, `name` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `registered_user` ( `id` int(11) NOT NULL, `email` varchar(255) DEFAULT NULL, `first_name` varchar(255) DEFAULT NULL, `last_name` varchar(255) DEFAULT NULL, `password` varchar(255) DEFAULT NULL, `roles` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `reservation` ( `id` int(11) NOT NULL, `avalaibility_date` date DEFAULT NULL, `notification_is_sent` bit(1) NOT NULL, `position` int(11) NOT NULL, `book_id` int(11) DEFAULT NULL, `library_id` int(11) DEFAULT NULL, `registered_user_id` int(11) DEFAULT NULL ) ALTER TABLE `available_copie` ADD CONSTRAINT `FK3cypfs2ivaoigc6eofcsu4mn5` FOREIGN KEY (`book_id`) REFERENCES `book` (`id`), ADD CONSTRAINT `FKps56tmxe7vcjvfdececjdqlhu` FOREIGN KEY (`library_id`) REFERENCES `library` (`id`) [42000-200]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.fabienit.biblioapi.BiblioApiApplication.main(BiblioApiApplication.java:10)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `book` ( `id` int(11) NOT NULL , `author_first_name` varchar(255) DEFAULT NULL, `author_last_name` varchar(255) DEFAULT NULL, `pictureurl` varchar(255) DEFAULT NULL, `publication_date` date NOT NULL, `synopsis` varchar(1000) DEFAULT NULL, `title` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `borrow` ( `id` int(11) NOT NULL, `book_returned` bit(1) NOT NULL, `borrow_date` date NOT NULL, `extended_duration` bit(1) NOT NULL, `return_date` date NOT NULL, `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `registered_user_id` int(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `library` ( `id` int(11) NOT NULL, `name` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `registered_user` ( `id` int(11) NOT NULL, `email` varchar(255) DEFAULT NULL, `first_name` varchar(255) DEFAULT NULL, `last_name` varchar(255) DEFAULT NULL, `password` varchar(255) DEFAULT NULL, `roles` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `reservation` ( `id` int(11) NOT NULL, `avalaibility_date` date DEFAULT NULL, `notification_is_sent` bit(1) NOT NULL, `position` int(11) NOT NULL, `book_id` int(11) DEFAULT NULL, `library_id` int(11) DEFAULT NULL, `registered_user_id` int(11) DEFAULT NULL ) ALTER TABLE `available_copie` ADD CONSTRAINT `FK3cypfs2ivaoigc6eofcsu4mn5` FOREIGN KEY (`book_id`) REFERENCES `book` (`id`), ADD CONSTRAINT `FKps56tmxe7vcjvfdececjdqlhu` FOREIGN KEY (`library_id`) REFERENCES `library` (`id`); nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) CREATE[*] TABLE IF NOT EXISTS `BOOK` ( `ID` INT(11) NOT NULL , `AUTHOR_FIRST_NAME` VARCHAR(255) DEFAULT NULL, `AUTHOR_LAST_NAME` VARCHAR(255) DEFAULT NULL, `PICTUREURL` VARCHAR(255) DEFAULT NULL, `PUBLICATION_DATE` DATE NOT NULL, `SYNOPSIS` VARCHAR(1000) DEFAULT NULL, `TITLE` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `BORROW` ( `ID` INT(11) NOT NULL, `BOOK_RETURNED` BIT(1) NOT NULL, `BORROW_DATE` DATE NOT NULL, `EXTENDED_DURATION` BIT(1) NOT NULL, `RETURN_DATE` DATE NOT NULL, `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `REGISTERED_USER_ID` INT(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `LIBRARY` ( `ID` INT(11) NOT NULL, `NAME` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `REGISTERED_USER` ( `ID` INT(11) NOT NULL, `EMAIL` VARCHAR(255) DEFAULT NULL, `FIRST_NAME` VARCHAR(255) DEFAULT NULL, `LAST_NAME` VARCHAR(255) DEFAULT NULL, `PASSWORD` VARCHAR(255) DEFAULT NULL, `ROLES` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `RESERVATION` ( `ID` INT(11) NOT NULL, `AVALAIBILITY_DATE` DATE DEFAULT NULL, `NOTIFICATION_IS_SENT` BIT(1) NOT NULL, `POSITION` INT(11) NOT NULL, `BOOK_ID` INT(11) DEFAULT NULL, `LIBRARY_ID` INT(11) DEFAULT NULL, `REGISTERED_USER_ID` INT(11) DEFAULT NULL ) ALTER TABLE `AVAILABLE_COPIE` ADD CONSTRAINT `FK3CYPFS2IVAOIGC6EOFCSU4MN5` FOREIGN KEY (`BOOK_ID`) REFERENCES `BOOK` (`ID`), ADD CONSTRAINT `FKPS56TMXE7VCJVFDECECJDQLHU` FOREIGN KEY (`LIBRARY_ID`) REFERENCES `LIBRARY` (`ID`)"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) CREATE[*] TABLE IF NOT EXISTS `BOOK` ( `ID` INT(11) NOT NULL , `AUTHOR_FIRST_NAME` VARCHAR(255) DEFAULT NULL, `AUTHOR_LAST_NAME` VARCHAR(255) DEFAULT NULL, `PICTUREURL` VARCHAR(255) DEFAULT NULL, `PUBLICATION_DATE` DATE NOT NULL, `SYNOPSIS` VARCHAR(1000) DEFAULT NULL, `TITLE` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `BORROW` ( `ID` INT(11) NOT NULL, `BOOK_RETURNED` BIT(1) NOT NULL, `BORROW_DATE` DATE NOT NULL, `EXTENDED_DURATION` BIT(1) NOT NULL, `RETURN_DATE` DATE NOT NULL, `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `REGISTERED_USER_ID` INT(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `LIBRARY` ( `ID` INT(11) NOT NULL, `NAME` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `REGISTERED_USER` ( `ID` INT(11) NOT NULL, `EMAIL` VARCHAR(255) DEFAULT NULL, `FIRST_NAME` VARCHAR(255) DEFAULT NULL, `LAST_NAME` VARCHAR(255) DEFAULT NULL, `PASSWORD` VARCHAR(255) DEFAULT NULL, `ROLES` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `RESERVATION` ( `ID` INT(11) NOT NULL, `AVALAIBILITY_DATE` DATE DEFAULT NULL, `NOTIFICATION_IS_SENT` BIT(1) NOT NULL, `POSITION` INT(11) NOT NULL, `BOOK_ID` INT(11) DEFAULT NULL, `LIBRARY_ID` INT(11) DEFAULT NULL, `REGISTERED_USER_ID` INT(11) DEFAULT NULL ) ALTER TABLE `AVAILABLE_COPIE` ADD CONSTRAINT `FK3CYPFS2IVAOIGC6EOFCSU4MN5` FOREIGN KEY (`BOOK_ID`) REFERENCES `BOOK` (`ID`), ADD CONSTRAINT `FKPS56TMXE7VCJVFDECECJDQLHU` FOREIGN KEY (`LIBRARY_ID`) REFERENCES `LIBRARY` (`ID`)"; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `book` ( `id` int(11) NOT NULL , `author_first_name` varchar(255) DEFAULT NULL, `author_last_name` varchar(255) DEFAULT NULL, `pictureurl` varchar(255) DEFAULT NULL, `publication_date` date NOT NULL, `synopsis` varchar(1000) DEFAULT NULL, `title` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `borrow` ( `id` int(11) NOT NULL, `book_returned` bit(1) NOT NULL, `borrow_date` date NOT NULL, `extended_duration` bit(1) NOT NULL, `return_date` date NOT NULL, `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `registered_user_id` int(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `library` ( `id` int(11) NOT NULL, `name` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `registered_user` ( `id` int(11) NOT NULL, `email` varchar(255) DEFAULT NULL, `first_name` varchar(255) DEFAULT NULL, `last_name` varchar(255) DEFAULT NULL, `password` varchar(255) DEFAULT NULL, `roles` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `reservation` ( `id` int(11) NOT NULL, `avalaibility_date` date DEFAULT NULL, `notification_is_sent` bit(1) NOT NULL, `position` int(11) NOT NULL, `book_id` int(11) DEFAULT NULL, `library_id` int(11) DEFAULT NULL, `registered_user_id` int(11) DEFAULT NULL ) ALTER TABLE `available_copie` ADD CONSTRAINT `FK3cypfs2ivaoigc6eofcsu4mn5` FOREIGN KEY (`book_id`) REFERENCES `book` (`id`), ADD CONSTRAINT `FKps56tmxe7vcjvfdececjdqlhu` FOREIGN KEY (`library_id`) REFERENCES `library` (`id`) [42000-200]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:626)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1807)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 15 common frames omitted
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) CREATE[*] TABLE IF NOT EXISTS `BOOK` ( `ID` INT(11) NOT NULL , `AUTHOR_FIRST_NAME` VARCHAR(255) DEFAULT NULL, `AUTHOR_LAST_NAME` VARCHAR(255) DEFAULT NULL, `PICTUREURL` VARCHAR(255) DEFAULT NULL, `PUBLICATION_DATE` DATE NOT NULL, `SYNOPSIS` VARCHAR(1000) DEFAULT NULL, `TITLE` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `BORROW` ( `ID` INT(11) NOT NULL, `BOOK_RETURNED` BIT(1) NOT NULL, `BORROW_DATE` DATE NOT NULL, `EXTENDED_DURATION` BIT(1) NOT NULL, `RETURN_DATE` DATE NOT NULL, `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `REGISTERED_USER_ID` INT(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `LIBRARY` ( `ID` INT(11) NOT NULL, `NAME` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `REGISTERED_USER` ( `ID` INT(11) NOT NULL, `EMAIL` VARCHAR(255) DEFAULT NULL, `FIRST_NAME` VARCHAR(255) DEFAULT NULL, `LAST_NAME` VARCHAR(255) DEFAULT NULL, `PASSWORD` VARCHAR(255) DEFAULT NULL, `ROLES` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `RESERVATION` ( `ID` INT(11) NOT NULL, `AVALAIBILITY_DATE` DATE DEFAULT NULL, `NOTIFICATION_IS_SENT` BIT(1) NOT NULL, `POSITION` INT(11) NOT NULL, `BOOK_ID` INT(11) DEFAULT NULL, `LIBRARY_ID` INT(11) DEFAULT NULL, `REGISTERED_USER_ID` INT(11) DEFAULT NULL ) ALTER TABLE `AVAILABLE_COPIE` ADD CONSTRAINT `FK3CYPFS2IVAOIGC6EOFCSU4MN5` FOREIGN KEY (`BOOK_ID`) REFERENCES `BOOK` (`ID`), ADD CONSTRAINT `FKPS56TMXE7VCJVFDECECJDQLHU` FOREIGN KEY (`LIBRARY_ID`) REFERENCES `LIBRARY` (`ID`)"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS `AVAILABLE_COPIE` ( `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `AVAILABLE_QUANTITY` INT(11) NOT NULL, `BOOK_CAN_BE_RESERVED` BIT(1) NOT NULL, `NEAREST_RETURN_DATE` DATE DEFAULT NULL, `OWNED_QUANTITY` INT(11) NOT NULL, `RESERVATION_COUNT` INT(11) NOT NULL ) CREATE[*] TABLE IF NOT EXISTS `BOOK` ( `ID` INT(11) NOT NULL , `AUTHOR_FIRST_NAME` VARCHAR(255) DEFAULT NULL, `AUTHOR_LAST_NAME` VARCHAR(255) DEFAULT NULL, `PICTUREURL` VARCHAR(255) DEFAULT NULL, `PUBLICATION_DATE` DATE NOT NULL, `SYNOPSIS` VARCHAR(1000) DEFAULT NULL, `TITLE` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `BORROW` ( `ID` INT(11) NOT NULL, `BOOK_RETURNED` BIT(1) NOT NULL, `BORROW_DATE` DATE NOT NULL, `EXTENDED_DURATION` BIT(1) NOT NULL, `RETURN_DATE` DATE NOT NULL, `BOOK_ID` INT(11) NOT NULL, `LIBRARY_ID` INT(11) NOT NULL, `REGISTERED_USER_ID` INT(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `LIBRARY` ( `ID` INT(11) NOT NULL, `NAME` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `REGISTERED_USER` ( `ID` INT(11) NOT NULL, `EMAIL` VARCHAR(255) DEFAULT NULL, `FIRST_NAME` VARCHAR(255) DEFAULT NULL, `LAST_NAME` VARCHAR(255) DEFAULT NULL, `PASSWORD` VARCHAR(255) DEFAULT NULL, `ROLES` VARCHAR(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `RESERVATION` ( `ID` INT(11) NOT NULL, `AVALAIBILITY_DATE` DATE DEFAULT NULL, `NOTIFICATION_IS_SENT` BIT(1) NOT NULL, `POSITION` INT(11) NOT NULL, `BOOK_ID` INT(11) DEFAULT NULL, `LIBRARY_ID` INT(11) DEFAULT NULL, `REGISTERED_USER_ID` INT(11) DEFAULT NULL ) ALTER TABLE `AVAILABLE_COPIE` ADD CONSTRAINT `FK3CYPFS2IVAOIGC6EOFCSU4MN5` FOREIGN KEY (`BOOK_ID`) REFERENCES `BOOK` (`ID`), ADD CONSTRAINT `FKPS56TMXE7VCJVFDECECJDQLHU` FOREIGN KEY (`LIBRARY_ID`) REFERENCES `LIBRARY` (`ID`)"; SQL statement:
CREATE TABLE IF NOT EXISTS `available_copie` ( `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `available_quantity` int(11) NOT NULL, `book_can_be_reserved` bit(1) NOT NULL, `nearest_return_date` date DEFAULT NULL, `owned_quantity` int(11) NOT NULL, `reservation_count` int(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `book` ( `id` int(11) NOT NULL , `author_first_name` varchar(255) DEFAULT NULL, `author_last_name` varchar(255) DEFAULT NULL, `pictureurl` varchar(255) DEFAULT NULL, `publication_date` date NOT NULL, `synopsis` varchar(1000) DEFAULT NULL, `title` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `borrow` ( `id` int(11) NOT NULL, `book_returned` bit(1) NOT NULL, `borrow_date` date NOT NULL, `extended_duration` bit(1) NOT NULL, `return_date` date NOT NULL, `book_id` int(11) NOT NULL, `library_id` int(11) NOT NULL, `registered_user_id` int(11) NOT NULL ) CREATE TABLE IF NOT EXISTS `library` ( `id` int(11) NOT NULL, `name` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `registered_user` ( `id` int(11) NOT NULL, `email` varchar(255) DEFAULT NULL, `first_name` varchar(255) DEFAULT NULL, `last_name` varchar(255) DEFAULT NULL, `password` varchar(255) DEFAULT NULL, `roles` varchar(255) DEFAULT NULL ) CREATE TABLE IF NOT EXISTS `reservation` ( `id` int(11) NOT NULL, `avalaibility_date` date DEFAULT NULL, `notification_is_sent` bit(1) NOT NULL, `position` int(11) NOT NULL, `book_id` int(11) DEFAULT NULL, `library_id` int(11) DEFAULT NULL, `registered_user_id` int(11) DEFAULT NULL ) ALTER TABLE `available_copie` ADD CONSTRAINT `FK3cypfs2ivaoigc6eofcsu4mn5` FOREIGN KEY (`book_id`) REFERENCES `book` (`id`), ADD CONSTRAINT `FKps56tmxe7vcjvfdececjdqlhu` FOREIGN KEY (`library_id`) REFERENCES `library` (`id`) [42000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.getSyntaxError(DbException.java:229)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1051)
	at org.h2.command.Parser.prepareCommand(Parser.java:741)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:605)
	... 31 common frames omitted
2022-03-11 15:39:45,654 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 19492 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 15:39:45,657 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 15:39:45,660 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 15:39:49,688 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: DROP DATABASE IF EXISTS `bibliop7` CREATE DATABASE IF NOT EXISTS `bibliop7` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP DATABASE[*] IF EXISTS `BIBLIOP7` CREATE DATABASE IF NOT EXISTS `BIBLIOP7` DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; attendu "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"
Syntax error in SQL statement "DROP DATABASE[*] IF EXISTS `BIBLIOP7` CREATE DATABASE IF NOT EXISTS `BIBLIOP7` DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; expected "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"; SQL statement:
DROP DATABASE IF EXISTS `bibliop7` CREATE DATABASE IF NOT EXISTS `bibliop7` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci [42001-200]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.fabienit.biblioapi.BiblioApiApplication.main(BiblioApiApplication.java:10)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: DROP DATABASE IF EXISTS `bibliop7` CREATE DATABASE IF NOT EXISTS `bibliop7` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP DATABASE[*] IF EXISTS `BIBLIOP7` CREATE DATABASE IF NOT EXISTS `BIBLIOP7` DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; attendu "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"
Syntax error in SQL statement "DROP DATABASE[*] IF EXISTS `BIBLIOP7` CREATE DATABASE IF NOT EXISTS `BIBLIOP7` DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; expected "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"; SQL statement:
DROP DATABASE IF EXISTS `bibliop7` CREATE DATABASE IF NOT EXISTS `bibliop7` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci [42001-200]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:626)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1807)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 15 common frames omitted
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP DATABASE[*] IF EXISTS `BIBLIOP7` CREATE DATABASE IF NOT EXISTS `BIBLIOP7` DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; attendu "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"
Syntax error in SQL statement "DROP DATABASE[*] IF EXISTS `BIBLIOP7` CREATE DATABASE IF NOT EXISTS `BIBLIOP7` DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; expected "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"; SQL statement:
DROP DATABASE IF EXISTS `bibliop7` CREATE DATABASE IF NOT EXISTS `bibliop7` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci [42001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.getSyntaxError(DbException.java:243)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1053)
	at org.h2.command.Parser.parseDrop(Parser.java:2356)
	at org.h2.command.Parser.parsePrepared(Parser.java:916)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:819)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:605)
	... 31 common frames omitted
2022-03-11 15:43:05,674 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 5648 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 15:43:05,678 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 15:43:05,681 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 15:43:09,637 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: DROP DATABASE IF EXISTS bibliop7 CREATE DATABASE IF NOT EXISTS bibliop7 DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP DATABASE[*] IF EXISTS BIBLIOP7 CREATE DATABASE IF NOT EXISTS BIBLIOP7 DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; attendu "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"
Syntax error in SQL statement "DROP DATABASE[*] IF EXISTS BIBLIOP7 CREATE DATABASE IF NOT EXISTS BIBLIOP7 DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; expected "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"; SQL statement:
DROP DATABASE IF EXISTS bibliop7 CREATE DATABASE IF NOT EXISTS bibliop7 DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci [42001-200]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.fabienit.biblioapi.BiblioApiApplication.main(BiblioApiApplication.java:10)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: DROP DATABASE IF EXISTS bibliop7 CREATE DATABASE IF NOT EXISTS bibliop7 DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP DATABASE[*] IF EXISTS BIBLIOP7 CREATE DATABASE IF NOT EXISTS BIBLIOP7 DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; attendu "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"
Syntax error in SQL statement "DROP DATABASE[*] IF EXISTS BIBLIOP7 CREATE DATABASE IF NOT EXISTS BIBLIOP7 DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; expected "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"; SQL statement:
DROP DATABASE IF EXISTS bibliop7 CREATE DATABASE IF NOT EXISTS bibliop7 DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci [42001-200]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:626)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1807)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 15 common frames omitted
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP DATABASE[*] IF EXISTS BIBLIOP7 CREATE DATABASE IF NOT EXISTS BIBLIOP7 DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; attendu "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"
Syntax error in SQL statement "DROP DATABASE[*] IF EXISTS BIBLIOP7 CREATE DATABASE IF NOT EXISTS BIBLIOP7 DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; expected "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"; SQL statement:
DROP DATABASE IF EXISTS bibliop7 CREATE DATABASE IF NOT EXISTS bibliop7 DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci [42001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.getSyntaxError(DbException.java:243)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1053)
	at org.h2.command.Parser.parseDrop(Parser.java:2356)
	at org.h2.command.Parser.parsePrepared(Parser.java:916)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:819)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:605)
	... 31 common frames omitted
2022-03-11 15:44:05,592 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 8264 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 15:44:05,595 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 15:44:05,598 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 15:44:09,518 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: DROP DATABASE IF EXISTS "bibliop7" CREATE DATABASE IF NOT EXISTS "bibliop7" DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP DATABASE[*] IF EXISTS ""bibliop7"" CREATE DATABASE IF NOT EXISTS ""bibliop7"" DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; attendu "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"
Syntax error in SQL statement "DROP DATABASE[*] IF EXISTS ""bibliop7"" CREATE DATABASE IF NOT EXISTS ""bibliop7"" DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; expected "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"; SQL statement:
DROP DATABASE IF EXISTS "bibliop7" CREATE DATABASE IF NOT EXISTS "bibliop7" DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci [42001-200]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.fabienit.biblioapi.BiblioApiApplication.main(BiblioApiApplication.java:10)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: DROP DATABASE IF EXISTS "bibliop7" CREATE DATABASE IF NOT EXISTS "bibliop7" DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP DATABASE[*] IF EXISTS ""bibliop7"" CREATE DATABASE IF NOT EXISTS ""bibliop7"" DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; attendu "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"
Syntax error in SQL statement "DROP DATABASE[*] IF EXISTS ""bibliop7"" CREATE DATABASE IF NOT EXISTS ""bibliop7"" DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; expected "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"; SQL statement:
DROP DATABASE IF EXISTS "bibliop7" CREATE DATABASE IF NOT EXISTS "bibliop7" DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci [42001-200]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:626)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1807)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 15 common frames omitted
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP DATABASE[*] IF EXISTS ""bibliop7"" CREATE DATABASE IF NOT EXISTS ""bibliop7"" DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; attendu "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"
Syntax error in SQL statement "DROP DATABASE[*] IF EXISTS ""bibliop7"" CREATE DATABASE IF NOT EXISTS ""bibliop7"" DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; expected "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"; SQL statement:
DROP DATABASE IF EXISTS "bibliop7" CREATE DATABASE IF NOT EXISTS "bibliop7" DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci [42001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.getSyntaxError(DbException.java:243)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1053)
	at org.h2.command.Parser.parseDrop(Parser.java:2356)
	at org.h2.command.Parser.parsePrepared(Parser.java:916)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:819)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:605)
	... 31 common frames omitted
2022-03-11 15:45:07,219 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 14208 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 15:45:07,222 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 15:45:07,225 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 15:45:11,131 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: DROP DATABASE IF EXISTS 'bibliop7' CREATE DATABASE IF NOT EXISTS 'bibliop7' DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP DATABASE[*] IF EXISTS 'bibliop7' CREATE DATABASE IF NOT EXISTS 'bibliop7' DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; attendu "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"
Syntax error in SQL statement "DROP DATABASE[*] IF EXISTS 'bibliop7' CREATE DATABASE IF NOT EXISTS 'bibliop7' DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; expected "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"; SQL statement:
DROP DATABASE IF EXISTS 'bibliop7' CREATE DATABASE IF NOT EXISTS 'bibliop7' DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci [42001-200]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.fabienit.biblioapi.BiblioApiApplication.main(BiblioApiApplication.java:10)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: DROP DATABASE IF EXISTS 'bibliop7' CREATE DATABASE IF NOT EXISTS 'bibliop7' DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP DATABASE[*] IF EXISTS 'bibliop7' CREATE DATABASE IF NOT EXISTS 'bibliop7' DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; attendu "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"
Syntax error in SQL statement "DROP DATABASE[*] IF EXISTS 'bibliop7' CREATE DATABASE IF NOT EXISTS 'bibliop7' DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; expected "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"; SQL statement:
DROP DATABASE IF EXISTS 'bibliop7' CREATE DATABASE IF NOT EXISTS 'bibliop7' DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci [42001-200]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:626)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1807)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 15 common frames omitted
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP DATABASE[*] IF EXISTS 'bibliop7' CREATE DATABASE IF NOT EXISTS 'bibliop7' DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; attendu "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"
Syntax error in SQL statement "DROP DATABASE[*] IF EXISTS 'bibliop7' CREATE DATABASE IF NOT EXISTS 'bibliop7' DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; expected "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"; SQL statement:
DROP DATABASE IF EXISTS 'bibliop7' CREATE DATABASE IF NOT EXISTS 'bibliop7' DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci [42001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.getSyntaxError(DbException.java:243)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1053)
	at org.h2.command.Parser.parseDrop(Parser.java:2356)
	at org.h2.command.Parser.parsePrepared(Parser.java:916)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:819)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:605)
	... 31 common frames omitted
2022-03-11 16:11:44,121 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 21260 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 16:11:44,124 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 16:11:44,128 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 16:11:48,154 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: DROP DATABASE IF EXISTS 'bibliop7' CREATE DATABASE IF NOT EXISTS 'bibliop7' DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP DATABASE[*] IF EXISTS 'bibliop7' CREATE DATABASE IF NOT EXISTS 'bibliop7' DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; attendu "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"
Syntax error in SQL statement "DROP DATABASE[*] IF EXISTS 'bibliop7' CREATE DATABASE IF NOT EXISTS 'bibliop7' DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; expected "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"; SQL statement:
DROP DATABASE IF EXISTS 'bibliop7' CREATE DATABASE IF NOT EXISTS 'bibliop7' DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci [42001-200]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.fabienit.biblioapi.BiblioApiApplication.main(BiblioApiApplication.java:10)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: DROP DATABASE IF EXISTS 'bibliop7' CREATE DATABASE IF NOT EXISTS 'bibliop7' DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP DATABASE[*] IF EXISTS 'bibliop7' CREATE DATABASE IF NOT EXISTS 'bibliop7' DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; attendu "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"
Syntax error in SQL statement "DROP DATABASE[*] IF EXISTS 'bibliop7' CREATE DATABASE IF NOT EXISTS 'bibliop7' DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; expected "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"; SQL statement:
DROP DATABASE IF EXISTS 'bibliop7' CREATE DATABASE IF NOT EXISTS 'bibliop7' DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci [42001-200]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:626)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1807)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 15 common frames omitted
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP DATABASE[*] IF EXISTS 'bibliop7' CREATE DATABASE IF NOT EXISTS 'bibliop7' DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; attendu "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"
Syntax error in SQL statement "DROP DATABASE[*] IF EXISTS 'bibliop7' CREATE DATABASE IF NOT EXISTS 'bibliop7' DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; expected "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"; SQL statement:
DROP DATABASE IF EXISTS 'bibliop7' CREATE DATABASE IF NOT EXISTS 'bibliop7' DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci [42001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.getSyntaxError(DbException.java:243)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1053)
	at org.h2.command.Parser.parseDrop(Parser.java:2356)
	at org.h2.command.Parser.parsePrepared(Parser.java:916)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:819)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:605)
	... 31 common frames omitted
2022-03-11 16:15:44,271 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 15564 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 16:15:44,274 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 16:15:44,277 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 16:15:48,257 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: DROP DATABASE IF EXISTS 'bibliop7'; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP DATABASE[*] IF EXISTS 'bibliop7'"; attendu "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"
Syntax error in SQL statement "DROP DATABASE[*] IF EXISTS 'bibliop7'"; expected "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"; SQL statement:
DROP DATABASE IF EXISTS 'bibliop7' [42001-200]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.fabienit.biblioapi.BiblioApiApplication.main(BiblioApiApplication.java:10)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: DROP DATABASE IF EXISTS 'bibliop7'; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP DATABASE[*] IF EXISTS 'bibliop7'"; attendu "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"
Syntax error in SQL statement "DROP DATABASE[*] IF EXISTS 'bibliop7'"; expected "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"; SQL statement:
DROP DATABASE IF EXISTS 'bibliop7' [42001-200]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:626)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1807)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 15 common frames omitted
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP DATABASE[*] IF EXISTS 'bibliop7'"; attendu "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"
Syntax error in SQL statement "DROP DATABASE[*] IF EXISTS 'bibliop7'"; expected "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"; SQL statement:
DROP DATABASE IF EXISTS 'bibliop7' [42001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.getSyntaxError(DbException.java:243)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1053)
	at org.h2.command.Parser.parseDrop(Parser.java:2356)
	at org.h2.command.Parser.parsePrepared(Parser.java:916)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:819)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:605)
	... 31 common frames omitted
2022-03-11 16:17:02,227 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 19764 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 16:17:02,230 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 16:17:02,234 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 16:17:06,170 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: DROP DATABASE IF EXISTS `bibliop7`; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP DATABASE[*] IF EXISTS `BIBLIOP7`"; attendu "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"
Syntax error in SQL statement "DROP DATABASE[*] IF EXISTS `BIBLIOP7`"; expected "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"; SQL statement:
DROP DATABASE IF EXISTS `bibliop7` [42001-200]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.fabienit.biblioapi.BiblioApiApplication.main(BiblioApiApplication.java:10)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: DROP DATABASE IF EXISTS `bibliop7`; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP DATABASE[*] IF EXISTS `BIBLIOP7`"; attendu "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"
Syntax error in SQL statement "DROP DATABASE[*] IF EXISTS `BIBLIOP7`"; expected "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"; SQL statement:
DROP DATABASE IF EXISTS `bibliop7` [42001-200]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:626)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1807)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 15 common frames omitted
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP DATABASE[*] IF EXISTS `BIBLIOP7`"; attendu "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"
Syntax error in SQL statement "DROP DATABASE[*] IF EXISTS `BIBLIOP7`"; expected "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"; SQL statement:
DROP DATABASE IF EXISTS `bibliop7` [42001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.getSyntaxError(DbException.java:243)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1053)
	at org.h2.command.Parser.parseDrop(Parser.java:2356)
	at org.h2.command.Parser.parsePrepared(Parser.java:916)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:819)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:605)
	... 31 common frames omitted
2022-03-11 17:36:28,481 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 8996 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 17:36:28,484 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 17:36:28,487 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 17:36:33,029 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: DROP DATABASE IF EXISTS bibliop7; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP DATABASE[*] IF EXISTS BIBLIOP7"; attendu "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"
Syntax error in SQL statement "DROP DATABASE[*] IF EXISTS BIBLIOP7"; expected "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"; SQL statement:
DROP DATABASE IF EXISTS bibliop7 [42001-200]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.fabienit.biblioapi.BiblioApiApplication.main(BiblioApiApplication.java:10)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: DROP DATABASE IF EXISTS bibliop7; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP DATABASE[*] IF EXISTS BIBLIOP7"; attendu "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"
Syntax error in SQL statement "DROP DATABASE[*] IF EXISTS BIBLIOP7"; expected "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"; SQL statement:
DROP DATABASE IF EXISTS bibliop7 [42001-200]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:626)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1807)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 15 common frames omitted
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP DATABASE[*] IF EXISTS BIBLIOP7"; attendu "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"
Syntax error in SQL statement "DROP DATABASE[*] IF EXISTS BIBLIOP7"; expected "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"; SQL statement:
DROP DATABASE IF EXISTS bibliop7 [42001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.getSyntaxError(DbException.java:243)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1053)
	at org.h2.command.Parser.parseDrop(Parser.java:2356)
	at org.h2.command.Parser.parsePrepared(Parser.java:916)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:819)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:605)
	... 31 common frames omitted
2022-03-11 17:41:31,107 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 19520 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 17:41:31,110 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 17:41:31,113 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 17:41:35,209 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: CREATE DATABASE IF NOT EXISTS bibliop7 DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE DATABASE[*] IF NOT EXISTS BIBLIOP7 DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; attendu "OR, FORCE, VIEW, ALIAS, SEQUENCE, USER, TRIGGER, ROLE, SCHEMA, CONSTANT, DOMAIN, TYPE, DATATYPE, AGGREGATE, LINKED, MEMORY, CACHED, LOCAL, GLOBAL, TEMP, TEMPORARY, TABLE, SYNONYM, PRIMARY, UNIQUE, HASH, SPATIAL, INDEX"
Syntax error in SQL statement "CREATE DATABASE[*] IF NOT EXISTS BIBLIOP7 DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; expected "OR, FORCE, VIEW, ALIAS, SEQUENCE, USER, TRIGGER, ROLE, SCHEMA, CONSTANT, DOMAIN, TYPE, DATATYPE, AGGREGATE, LINKED, MEMORY, CACHED, LOCAL, GLOBAL, TEMP, TEMPORARY, TABLE, SYNONYM, PRIMARY, UNIQUE, HASH, SPATIAL, INDEX"; SQL statement:
CREATE DATABASE IF NOT EXISTS bibliop7 DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci [42001-200]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.fabienit.biblioapi.BiblioApiApplication.main(BiblioApiApplication.java:10)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: CREATE DATABASE IF NOT EXISTS bibliop7 DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE DATABASE[*] IF NOT EXISTS BIBLIOP7 DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; attendu "OR, FORCE, VIEW, ALIAS, SEQUENCE, USER, TRIGGER, ROLE, SCHEMA, CONSTANT, DOMAIN, TYPE, DATATYPE, AGGREGATE, LINKED, MEMORY, CACHED, LOCAL, GLOBAL, TEMP, TEMPORARY, TABLE, SYNONYM, PRIMARY, UNIQUE, HASH, SPATIAL, INDEX"
Syntax error in SQL statement "CREATE DATABASE[*] IF NOT EXISTS BIBLIOP7 DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; expected "OR, FORCE, VIEW, ALIAS, SEQUENCE, USER, TRIGGER, ROLE, SCHEMA, CONSTANT, DOMAIN, TYPE, DATATYPE, AGGREGATE, LINKED, MEMORY, CACHED, LOCAL, GLOBAL, TEMP, TEMPORARY, TABLE, SYNONYM, PRIMARY, UNIQUE, HASH, SPATIAL, INDEX"; SQL statement:
CREATE DATABASE IF NOT EXISTS bibliop7 DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci [42001-200]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:626)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1807)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 15 common frames omitted
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE DATABASE[*] IF NOT EXISTS BIBLIOP7 DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; attendu "OR, FORCE, VIEW, ALIAS, SEQUENCE, USER, TRIGGER, ROLE, SCHEMA, CONSTANT, DOMAIN, TYPE, DATATYPE, AGGREGATE, LINKED, MEMORY, CACHED, LOCAL, GLOBAL, TEMP, TEMPORARY, TABLE, SYNONYM, PRIMARY, UNIQUE, HASH, SPATIAL, INDEX"
Syntax error in SQL statement "CREATE DATABASE[*] IF NOT EXISTS BIBLIOP7 DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; expected "OR, FORCE, VIEW, ALIAS, SEQUENCE, USER, TRIGGER, ROLE, SCHEMA, CONSTANT, DOMAIN, TYPE, DATATYPE, AGGREGATE, LINKED, MEMORY, CACHED, LOCAL, GLOBAL, TEMP, TEMPORARY, TABLE, SYNONYM, PRIMARY, UNIQUE, HASH, SPATIAL, INDEX"; SQL statement:
CREATE DATABASE IF NOT EXISTS bibliop7 DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci [42001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.getSyntaxError(DbException.java:243)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1053)
	at org.h2.command.Parser.parseCreate(Parser.java:6313)
	at org.h2.command.Parser.parsePrepared(Parser.java:903)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:819)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:605)
	... 31 common frames omitted
2022-03-11 21:17:17,081 INFO com.fabienit.biblioapi.BiblioApiApplicationTests [main] Starting BiblioApiApplicationTests on FABPC with PID 21540 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 21:17:17,087 DEBUG com.fabienit.biblioapi.BiblioApiApplicationTests [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 21:17:17,088 INFO com.fabienit.biblioapi.BiblioApiApplicationTests [main] The following profiles are active: prod
2022-03-11 21:17:23,334 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: DROP DATABASE IF EXISTS 'bibliop7'; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP DATABASE[*] IF EXISTS 'bibliop7'"; attendu "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"
Syntax error in SQL statement "DROP DATABASE[*] IF EXISTS 'bibliop7'"; expected "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"; SQL statement:
DROP DATABASE IF EXISTS 'bibliop7' [42001-200]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$5(ClassBasedTestDescriptor.java:337)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:342)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$6(ClassBasedTestDescriptor.java:337)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:336)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:259)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$2(ClassBasedTestDescriptor.java:252)
	at java.base/java.util.Optional.orElseGet(Optional.java:369)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$3(ClassBasedTestDescriptor.java:251)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:29)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$1(NodeTestTask.java:107)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:107)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:75)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: DROP DATABASE IF EXISTS 'bibliop7'; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP DATABASE[*] IF EXISTS 'bibliop7'"; attendu "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"
Syntax error in SQL statement "DROP DATABASE[*] IF EXISTS 'bibliop7'"; expected "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"; SQL statement:
DROP DATABASE IF EXISTS 'bibliop7' [42001-200]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:626)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1807)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 79 common frames omitted
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP DATABASE[*] IF EXISTS 'bibliop7'"; attendu "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"
Syntax error in SQL statement "DROP DATABASE[*] IF EXISTS 'bibliop7'"; expected "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"; SQL statement:
DROP DATABASE IF EXISTS 'bibliop7' [42001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.getSyntaxError(DbException.java:243)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1053)
	at org.h2.command.Parser.parseDrop(Parser.java:2356)
	at org.h2.command.Parser.parsePrepared(Parser.java:916)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:819)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:605)
	... 95 common frames omitted
2022-03-11 21:17:23,340 ERROR org.springframework.test.context.TestContextManager [main] Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@55d8f6bb] to prepare test instance [com.fabienit.biblioapi.BiblioApiApplicationTests@56b48163]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$5(ClassBasedTestDescriptor.java:337)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:342)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$6(ClassBasedTestDescriptor.java:337)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:336)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:259)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$2(ClassBasedTestDescriptor.java:252)
	at java.base/java.util.Optional.orElseGet(Optional.java:369)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$3(ClassBasedTestDescriptor.java:251)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:29)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$1(NodeTestTask.java:107)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:107)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:75)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: DROP DATABASE IF EXISTS 'bibliop7'; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP DATABASE[*] IF EXISTS 'bibliop7'"; attendu "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"
Syntax error in SQL statement "DROP DATABASE[*] IF EXISTS 'bibliop7'"; expected "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"; SQL statement:
DROP DATABASE IF EXISTS 'bibliop7' [42001-200]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 65 common frames omitted
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: DROP DATABASE IF EXISTS 'bibliop7'; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP DATABASE[*] IF EXISTS 'bibliop7'"; attendu "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"
Syntax error in SQL statement "DROP DATABASE[*] IF EXISTS 'bibliop7'"; expected "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"; SQL statement:
DROP DATABASE IF EXISTS 'bibliop7' [42001-200]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:626)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1807)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 79 common frames omitted
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP DATABASE[*] IF EXISTS 'bibliop7'"; attendu "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"
Syntax error in SQL statement "DROP DATABASE[*] IF EXISTS 'bibliop7'"; expected "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"; SQL statement:
DROP DATABASE IF EXISTS 'bibliop7' [42001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.getSyntaxError(DbException.java:243)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1053)
	at org.h2.command.Parser.parseDrop(Parser.java:2356)
	at org.h2.command.Parser.parsePrepared(Parser.java:916)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:819)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:605)
	... 95 common frames omitted
2022-03-11 21:18:45,313 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 13192 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 21:18:45,316 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 21:18:45,320 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 21:18:49,301 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: CREATE DATABASE IF NOT EXISTS bibliop7 DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE DATABASE[*] IF NOT EXISTS BIBLIOP7 DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; attendu "OR, FORCE, VIEW, ALIAS, SEQUENCE, USER, TRIGGER, ROLE, SCHEMA, CONSTANT, DOMAIN, TYPE, DATATYPE, AGGREGATE, LINKED, MEMORY, CACHED, LOCAL, GLOBAL, TEMP, TEMPORARY, TABLE, SYNONYM, PRIMARY, UNIQUE, HASH, SPATIAL, INDEX"
Syntax error in SQL statement "CREATE DATABASE[*] IF NOT EXISTS BIBLIOP7 DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; expected "OR, FORCE, VIEW, ALIAS, SEQUENCE, USER, TRIGGER, ROLE, SCHEMA, CONSTANT, DOMAIN, TYPE, DATATYPE, AGGREGATE, LINKED, MEMORY, CACHED, LOCAL, GLOBAL, TEMP, TEMPORARY, TABLE, SYNONYM, PRIMARY, UNIQUE, HASH, SPATIAL, INDEX"; SQL statement:
CREATE DATABASE IF NOT EXISTS bibliop7 DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci [42001-200]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.fabienit.biblioapi.BiblioApiApplication.main(BiblioApiApplication.java:10)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/FaB/Git/Projet%207/bibliothequeocp7/backendApiBiblio/target/classes/data.sql]: CREATE DATABASE IF NOT EXISTS bibliop7 DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE DATABASE[*] IF NOT EXISTS BIBLIOP7 DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; attendu "OR, FORCE, VIEW, ALIAS, SEQUENCE, USER, TRIGGER, ROLE, SCHEMA, CONSTANT, DOMAIN, TYPE, DATATYPE, AGGREGATE, LINKED, MEMORY, CACHED, LOCAL, GLOBAL, TEMP, TEMPORARY, TABLE, SYNONYM, PRIMARY, UNIQUE, HASH, SPATIAL, INDEX"
Syntax error in SQL statement "CREATE DATABASE[*] IF NOT EXISTS BIBLIOP7 DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; expected "OR, FORCE, VIEW, ALIAS, SEQUENCE, USER, TRIGGER, ROLE, SCHEMA, CONSTANT, DOMAIN, TYPE, DATATYPE, AGGREGATE, LINKED, MEMORY, CACHED, LOCAL, GLOBAL, TEMP, TEMPORARY, TABLE, SYNONYM, PRIMARY, UNIQUE, HASH, SPATIAL, INDEX"; SQL statement:
CREATE DATABASE IF NOT EXISTS bibliop7 DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci [42001-200]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:626)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1807)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 15 common frames omitted
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE DATABASE[*] IF NOT EXISTS BIBLIOP7 DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; attendu "OR, FORCE, VIEW, ALIAS, SEQUENCE, USER, TRIGGER, ROLE, SCHEMA, CONSTANT, DOMAIN, TYPE, DATATYPE, AGGREGATE, LINKED, MEMORY, CACHED, LOCAL, GLOBAL, TEMP, TEMPORARY, TABLE, SYNONYM, PRIMARY, UNIQUE, HASH, SPATIAL, INDEX"
Syntax error in SQL statement "CREATE DATABASE[*] IF NOT EXISTS BIBLIOP7 DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI"; expected "OR, FORCE, VIEW, ALIAS, SEQUENCE, USER, TRIGGER, ROLE, SCHEMA, CONSTANT, DOMAIN, TYPE, DATATYPE, AGGREGATE, LINKED, MEMORY, CACHED, LOCAL, GLOBAL, TEMP, TEMPORARY, TABLE, SYNONYM, PRIMARY, UNIQUE, HASH, SPATIAL, INDEX"; SQL statement:
CREATE DATABASE IF NOT EXISTS bibliop7 DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci [42001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.getSyntaxError(DbException.java:243)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1053)
	at org.h2.command.Parser.parseCreate(Parser.java:6313)
	at org.h2.command.Parser.parsePrepared(Parser.java:903)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:819)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:605)
	... 31 common frames omitted
2022-03-11 21:23:29,120 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 21208 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 21:23:29,125 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 21:23:29,128 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 21:23:32,299 ERROR org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter [main] 

***************************
APPLICATION FAILED TO START
***************************

Description:

Failed to configure a DataSource: 'url' attribute is not specified and no embedded datasource could be configured.

Reason: Failed to determine a suitable driver class


Action:

Consider the following:
	If you want an embedded database (H2, HSQL or Derby), please put it on the classpath.
	If you have database settings to be loaded from a particular profile you may need to activate it (no profiles are currently active).

2022-03-11 21:26:24,291 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 21116 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 21:26:24,295 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 21:26:24,299 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 21:26:30,229 DEBUG com.fabienit.biblioapi.configuration.SwaggerConfig$$EnhancerBySpringCGLIB$$6549037b [main] Set Swagger2 documentation
2022-03-11 21:26:30,879 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Started BiblioApiApplication in 7.07 seconds (JVM running for 8.127)
2022-03-11 21:28:54,977 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 3856 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 21:28:54,980 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 21:28:54,983 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 21:29:00,320 DEBUG com.fabienit.biblioapi.configuration.SwaggerConfig$$EnhancerBySpringCGLIB$$5d4f30dd [main] Set Swagger2 documentation
2022-03-11 21:29:00,963 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Started BiblioApiApplication in 6.442 seconds (JVM running for 7.313)
2022-03-11 21:30:03,428 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 22124 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 21:30:03,432 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 21:30:03,435 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 21:30:08,530 DEBUG com.fabienit.biblioapi.configuration.SwaggerConfig$$EnhancerBySpringCGLIB$$d22f209b [main] Set Swagger2 documentation
2022-03-11 21:30:09,135 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Started BiblioApiApplication in 6.129 seconds (JVM running for 6.975)
2022-03-11 21:31:06,598 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 4572 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 21:31:06,601 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 21:31:06,605 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 21:31:11,723 DEBUG com.fabienit.biblioapi.configuration.SwaggerConfig$$EnhancerBySpringCGLIB$$42759656 [main] Set Swagger2 documentation
2022-03-11 21:31:12,332 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Started BiblioApiApplication in 6.167 seconds (JVM running for 7.005)
2022-03-11 21:54:28,847 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 20056 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 21:54:28,851 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 21:54:28,854 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 21:54:34,019 DEBUG com.fabienit.biblioapi.configuration.SwaggerConfig$$EnhancerBySpringCGLIB$$f45c5e39 [main] Set Swagger2 documentation
2022-03-11 21:54:34,682 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Started BiblioApiApplication in 6.266 seconds (JVM running for 7.253)
2022-03-11 21:55:26,056 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 11636 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 21:55:26,059 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 21:55:26,062 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 21:55:31,178 DEBUG com.fabienit.biblioapi.configuration.SwaggerConfig$$EnhancerBySpringCGLIB$$21a62a9d [main] Set Swagger2 documentation
2022-03-11 21:55:31,836 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Started BiblioApiApplication in 6.213 seconds (JVM running for 7.076)
2022-03-11 21:56:09,595 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 20648 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 21:56:09,604 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 21:56:09,605 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 21:56:14,828 DEBUG com.fabienit.biblioapi.configuration.SwaggerConfig$$EnhancerBySpringCGLIB$$72501901 [main] Set Swagger2 documentation
2022-03-11 21:56:15,492 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Started BiblioApiApplication in 6.324 seconds (JVM running for 7.199)
2022-03-11 21:57:10,211 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Starting BiblioApiApplication on FABPC with PID 9236 (started by FaB PC in C:\Users\FaB\Git\Projet 7\bibliothequeocp7\backendApiBiblio)
2022-03-11 21:57:10,215 DEBUG com.fabienit.biblioapi.BiblioApiApplication [main] Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
2022-03-11 21:57:10,218 INFO com.fabienit.biblioapi.BiblioApiApplication [main] The following profiles are active: prod
2022-03-11 21:57:15,351 DEBUG com.fabienit.biblioapi.configuration.SwaggerConfig$$EnhancerBySpringCGLIB$$c06b078e [main] Set Swagger2 documentation
2022-03-11 21:57:16,010 INFO com.fabienit.biblioapi.BiblioApiApplication [main] Started BiblioApiApplication in 6.228 seconds (JVM running for 7.076)
